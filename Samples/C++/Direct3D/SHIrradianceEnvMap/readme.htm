<HTML>
<HEAD>
<TITLE>SHIrradianceEnvMap Direct3D Sample</TITLE>
<STYLE TYPE="text/css">
.h1 { font-family: tahoma; font-size: 18px; font-weight: bold }
.h2 { font-family: arial; font-size: 14px; font-weight: bold; vertical-align: super; line-height: 20px }
.p  { font-family: arial; font-size: 12px; line-height: 16px }
.header { padding: 3px; font-family: tahoma; font-size: 10px; font-weight: bold; color: white } 
.chart { font-family: monospace; font-size: 12px }
</STYLE>
</HEAD>

<BODY bgColor=#ffffff MARGINHEIGHT="2" TOPMARGIN=2 LEFTMARGIN=2 RIGHTMARGIN=2>

<!-- HEADER - DO NOT MODIFY -->
<TABLE BACKGROUND="doc/header_background.gif" WIDTH="100%" BORDER=0 CELLPADDING=0 CELLSPACING=0>
<TR>
<TD ALIGN="left"><IMG SRC="doc/header_left.gif" BORDER=0></TD>
<TD ALIGN="right"><IMG SRC="doc/header_right.gif" BORDER=0></TD>
</TR>
</TABLE>
<!-- END HEADER -->

<!-- MASTER TABLE - DO NOT MODIFY -->
<TABLE WIDTH="100%" BORDER=0 CELLPADDING=20>
<TR>
<TD CLASS="p">
<!-- END MASTER TABLE -->

<FONT CLASS="h1">
<!-- INSERT SAMPLE NAME -->
SHIrradianceEnvMap Sample
<!-- END SAMPLE NAME -->
</FONT>
<HR>

<TABLE WIDTH="100%" BGCOLOR="#FFFFFF" BORDER=0 CELLPADDING=10 CELLSPACING=0>
<TR>
<TD CLASS="p">
<BR CLEAR="left">
<IMG style="MARGIN-TOP: -7px; MARGIN-LEFT: -20px" hspace=20 src="SHIrradianceEnvMap.jpg" align=left vspace=10 >
<FONT CLASS="h2">Description</FONT><BR>
<!-- INSERT SAMPLE DESCRIPTION -->
This sample shows how to use spherical harmonics to handle any number of lights in a single pass with a simple shader.
<!-- END SAMPLE DESCRIPTION -->
<BR CLEAR="left">
<BR CLEAR="left">
</TD>
</TR>
</TABLE>

<HR>
<BR CLEAR="left">
<FONT CLASS="h2">Path</FONT>
<TABLE STYLE="margin-left: -4px" CELLSPACING=4 CELLPADDING=4 BORDER=0>
<TR>
<!-- PATH INFORMATION -->
<TD CLASS="chart" BGCOLOR=#DDDDDD ALIGN="right"><B>Source:</B></TD>
<TD CLASS="chart" BGCOLOR=#EEEEEE>DX90SDK\Samples\C++\Direct3D\SHIrradianceEnvMap</TD>
<!-- END PATH INFORMATION -->
</TR>
<TR>
<!-- PATH INFORMATION -->
<TD CLASS="chart" BGCOLOR=#DDDDDD ALIGN="right"><B>Executable:</B></TD>
<TD CLASS="chart" BGCOLOR=#EEEEEE>DX90SDK\Samples\C++\Direct3D\Bin\SHIrradianceEnvMap.exe</TD>
<!-- END PATH INFORMATION -->
</TR>
</TABLE>
<BR CLEAR="left">
<BR CLEAR="left">

<FONT CLASS="h2">Why is this sample interesting?</FONT><BR> 
Irradiance Environment Maps are a technique for lighting diffuse objects in an arbitrary lighting environment without shadows in a single pass. This technique was first presented at SIGGRAPH 2001 by Ravi Ramamoorthi and Pat Hanrahan in the paper "An Efficient Representation for Irradiance Environment Maps". Using spherical harmonics (SH), an arbitrary lighting environment can almost be perfectly reconstructed with only 9 coefficients. Because of this, the shader complexity is independent of the complexity of the lighting environment. Also note that unlike PRT this technique does not require any precomputation. 
<P>
<FONT CLASS="h2">How does this sample work?</FONT><BR> 
The sample loads the mesh, the texture for the mesh, and an effect as usual. The interesting part of the sample is in CMyD3DApplication::RenderMeshWithIrradianceEnvMap(). This function calls D3DXSHEvalDirectionalLight() for each directional light to get 9 spherical harmonics coefficients per channel per light. It then sums these coefficients to a single set of 9 coefficients per channel using D3DXSHAdd(). Note that instead of D3DXSHEvalDirectionalLight(), it's possible to call any of the D3DXSHEval*() functions or D3DXSHProjectCubeMap(). This simple sample just allows up to 3 directional lights. 
<P>
To compute the exit radiance for a given normal, you need to evaluate the lighting convolved with the clamped cosine kernel (represented in SH) in the direction of the normal. The coefficients of the SH basis functions are combined into shader constants with the convolution coefficients in a form that is efficient to evaluate in the shader "IrradianceEnvironmentMapVS". This is described more fully in the article by Peter-Pike Sloan titled "Efficient Evaluation of Irradiance Environment Maps" in the book "ShaderX 2 - Shader Programming Tips and Tricks" by Wolfgang F. Engel. If the lighting environment is grayscale this shader could be simplified. 
<P>
<FONT CLASS="h2">Typical scenarios for this technique</FONT><BR> 
A typical engine using this technique might do some number of lights normally with shadows, phong, etc but would use this technique to render any additional lights in a single pass. Care has to be taken so popping doesn't occur as lights are moved out of the diffuse only SH set and into the set that models shadows/more complex materials. 
<!-- FOOTER - DO NOT MODIFY --> 
<BR clear="left">
<BR clear="left">
<BR clear="left">
<HR>
<CENTER>
Copyright (c) Microsoft Corporation. All rights reserved.
</CENTER>
<!-- END FOOTER -->

<!-- MASTER TABLE - DO NOT MODIFY -->
</TD>
</TR>
</TABLE>
<!-- END MASTER TABLE -->

</BODY>
</HTML>