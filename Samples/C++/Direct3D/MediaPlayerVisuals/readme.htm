<HTML>
<HEAD>
<TITLE>MediaPlayerVisuals Direct3D Sample</TITLE>
<STYLE TYPE="text/css">
.h1 { font-family: tahoma; font-size: 18px; font-weight: bold }
.h2 { font-family: arial; font-size: 14px; font-weight: bold; vertical-align: super; line-height: 20px }
.p  { font-family: arial; font-size: 12px; line-height: 16px }
.header { padding: 3px; font-family: tahoma; font-size: 10px; font-weight: bold; color: white } 
.chart { font-family: monospace; font-size: 12px }
</STYLE>
</HEAD>

<BODY bgColor=#ffffff MARGINHEIGHT="2" TOPMARGIN=2 LEFTMARGIN=2 RIGHTMARGIN=2>

<!-- HEADER - DO NOT MODIFY -->
<TABLE BACKGROUND="doc/header_background.gif" WIDTH="100%" BORDER=0 CELLPADDING=0 CELLSPACING=0>
<TR>
<TD ALIGN="left"><IMG SRC="doc/header_left.gif" BORDER=0></TD>
<TD ALIGN="right"><IMG SRC="doc/header_right.gif" BORDER=0></TD>
</TR>
</TABLE>
<!-- END HEADER -->

<!-- MASTER TABLE - DO NOT MODIFY -->
<TABLE WIDTH="100%" BORDER=0 CELLPADDING=20>
<TR>
<TD CLASS="p">
<!-- END MASTER TABLE -->

<FONT CLASS="h1">
<!-- INSERT SAMPLE NAME -->
MediaPlayerVisuals Sample
<!-- END SAMPLE NAME -->
</FONT>
<HR>

<TABLE WIDTH="100%" BGCOLOR="#FFFFFF" BORDER=0 CELLPADDING=10 CELLSPACING=0>
<TR>
<TD CLASS="p">
<BR CLEAR="left">
<IMG style="MARGIN-TOP: -7px; MARGIN-LEFT: -20px" hspace=20 src="MediaPlayerVisuals.jpg" align=left vspace=10 >
<FONT CLASS="h2">Description</FONT><BR>
<!-- INSERT SAMPLE DESCRIPTION -->
This sample is a collection of Windows Media Player visualizations which use 
Direct3D, along with a supporting common framework class which enables 
developers to easily create their own Direct3D visualizations. 
<!-- END SAMPLE DESCRIPTION -->
<BR CLEAR="left">
<BR CLEAR="left">
</TD>
</TR>
</TABLE>

<HR>
<BR CLEAR="left">
<FONT CLASS="h2">Path</FONT>
<TABLE STYLE="margin-left: -4px" CELLSPACING=4 CELLPADDING=4 BORDER=0>
<TR>
<!-- PATH INFORMATION -->
<TD CLASS="chart" BGCOLOR=#DDDDDD ALIGN="right"><B>Source:</B></TD>
<TD CLASS="chart" BGCOLOR=#EEEEEE>DX90SDK\Samples\C++\Direct3D\MediaPlayerVisuals</TD>
<!-- END PATH INFORMATION -->
</TR>
<TR>
<!-- PATH INFORMATION -->
<TD CLASS="chart" BGCOLOR=#DDDDDD ALIGN="right"><B>Plug-in:</B></TD>
<TD CLASS="chart" BGCOLOR=#EEEEEE>DX90SDK\Samples\C++\Direct3D\Bin\MediaPlayerVisuals.dll</TD>
<!-- END PATH INFORMATION -->
</TR>
</TABLE>
<BR CLEAR="left">
<BR CLEAR="left">

<FONT CLASS="h2">Requirements</FONT><BR>
<TABLE STYLE="border: 1px solid black" WIDTH="100%" BGCOLOR="#F5F5F5" CELLPADDING=10 CELLSPACING=0>
<TR>
<TD CLASS="p">
<B>
<FONT COLOR="red">
Execution of the plug-in requires Windows Media Player 9 Series.<BR>
Compilation of the source code requires the Windows Media 9 Series SDK.<BR>
</FONT>
</B>
<BR>
Each of these components is available as a free download from the Windows 
Media Player website:<BR> 
<A HREF="http://www.microsoft.com/windows/windowsmedia">http://www.microsoft.com/windows/windowsmedia</A>
</TD>
</TR>
</TABLE>
<BR CLEAR="left">
<BR CLEAR="left">

<FONT CLASS="h2">User's Guide</FONT><BR> 
<TABLE STYLE="border: 1px solid black" WIDTH="100%" BGCOLOR="#F5F5F5" CELLPADDING=10 CELLSPACING=0>
<TR>
<TD CLASS="p">     
<B>To run the plug-in:</B>
<OL>
<LI>Open Windows Media Player 9 Series 
<LI>Click the "View" menu option, select "Visualizations->Options..."
<LI>Click the "Add..." button and browse to the compiled "MediaPlayerVisuals.dll"
         file.
<LI>"Microsoft Direct3D" should now be on your list of installed
         visualizations. Close the options dialog to return to the application
         window.
<LI>To set one of the Direct3D presets as the active visualization, click 
         "View->Visualizations->Microsoft Direct3D" from the menu and select
         the desired preset.
</OL>      
<B>To compile the source code:</B>
<OL>
<LI>Locate the directory search path settings inside your build environment.
            For Visual Studio 6: "Tools->Options->Directories"
            For Visual Studio.NET: "Tools->Options->Projects->VC++ Directories"
<LI>Add the Windows Media 9 Series SDK include directory to the include
         directories search path (commonly "C:\WMSDK\WMPSDK9\include")
</OL>
</TD>
</TR>
</TABLE>
<BR CLEAR="left">
<BR CLEAR="left">

<FONT CLASS="h2">Programming Notes</FONT><BR> 
The majority of files in the project were generated by the Windows Media Player 
Plug-in Wizard and have not been modified. The files of interest are:
<BR clear="left">
<BR clear="left">
<TABLE BORDER=0 CELLSPACING=20>
<TR>
<TD CLASS="p" VALIGN="top"><B>D3DVisualizaton.cpp</B></TD>
<TD CLASS="p" VALIGN="top">  
DirectX common framework class. This class is a modified
version of the D3DApplication class shared by the rest of the
SDK samples, and acts as an interpreter between the 
Windows Media Player interface and the common Direct3D
application model.
</TD>
</TR>
<TR>
<TD CLASS="p" VALIGN="top"><B>MediaPlayerVisuals.cpp</B></TD>
<TD CLASS="p" VALIGN="top">
This file was generated by the Windows Media Player
Plug-in Wizard to implement an example visualization,
but has been modified to make the appropriate calls
into the CD3DVisualization interface.
</TD>
</TR>
<TR>
<TD CLASS="p" VALIGN="top"><B>Bars.cpp</B></TD>
<TD CLASS="p" VALIGN="top">
Implementation of the Bars visualization. This class
is derived from CD3DVisualization and illustrates how
to create a simple Direct3D visualization, including
support for a property dialog.
</TD>
</TR>
<TR>
<TD CLASS="p" VALIGN="top"><B>SpectrumWheel.cpp</B></TD>
<TD CLASS="p" VALIGN="top">
Implementation of the Spectrum Wheel visualization. This
class is an example of a more advanced Direct3D
visualization.
</TD>
</TR>
</TABLE>

<P> 
   Windows Media Player visualizations are implemented as a collection of presets
   enclosed within a single effect; the effect implements the IWMPEffects 
   interface to communicate with the Player application, and several of the 
   member functions accept an argument to indicate which preset the call
   is intended for. This sample assigns a separate CD3DVisualization derived 
   class for each preset, but you could easily share rendering code across several 
   presets and simply adjust rendering parameters depending on which one is
   selected. See the Windows Media 9 Series SDK documentation for more information 
   about the IWMPEffects interface.
<P>
   The CD3DVisualization class handles the mapping between the IWMPEffects
   interface and the CD3DApplication sample framework, so a custom visualization
   can be created by overriding the same CD3DApplication functions as used 
   throughout the samples. The member functions unique to visualizations are:

<TABLE BORDER=0 CELLSPACING=20>
<TR>
<TD CLASS="p" VALIGN="top"><B>GetTitle</B></TD>
<TD CLASS="p" VALIGN="top">  
Returns the display name.
</TD>
</TR>
<TR>
<TD CLASS="p" VALIGN="top"><B>GetPropSheetPage</B></TD>
<TD CLASS="p" VALIGN="top">
Retrieves the property sheet page header which defines
the configuration dialog.
</TD>
</TR>
<TR>
<TD CLASS="p" VALIGN="top"><B>GetCapabilities</B></TD>
<TD CLASS="p" VALIGN="top">
Indicates whether the visualization supports full-
screen rendering and/or a configuration dialog
</TD>
</TR>
<TR>
<TD CLASS="p" VALIGN="top"><B>MediaInfo</B></TD>
<TD CLASS="p" VALIGN="top">
Sends channel count, sample rate, and display title 
information about the currently playing media.
</TD>
</TR>
</TABLE>
<P>
   Each time the Player application prompts the visualization to render, 
   per-channel frequency and waveform information is sent to allow the 
   visualization to respond to the music. This information is accessible from
   the "m_pAudioLevels" member variable inside the CD3DVisualization class.
<P>   
   This sample makes use of common DirectX code (consisting of helper functions,
   etc.) that is shared with other samples on the DirectX SDK. All common
   headers and source code can be found in the following directory:
      (SDK Directory)\Samples\C++\Common
<BR clear="left">
<BR clear="left">
<BR clear="left">

<FONT CLASS="h2">Bars Visualization</FONT><BR>
The Bars visualization implements very simple rendering and configuration 
   functionalily. Upon construction, the class loads the bar width and spacing
   options from the registry. These values are used inside RestoreDeviceObjects()
   to determine how many bars will be drawn, and therefore how many vertices and
   indices are required. These vertices are filled during every call to
   FrameMove() based on the current state of the audio stream. 
<P>
   User-configurable options are handled through a property page; the collection
   of pages for all the presets in the visualization are displayed when the user
   opens the properties dialog through Player menu. GetPropSheetPage() retrieves
   the PROPSHEETPAGE structure which contains the dialog resource and dialog
   procedure callback. DialogProc() (and the StaticDialogProc() helper function)
   implement this dialog procedure to handle user input. These configurable
   values are pushed to the registry when the visualization is destroyed.
<P>
<!-- IMAGE LIST -->
<TABLE STYLE="border: 1px solid black" WIDTH="100%" BGCOLOR="#FFFFFF" CELLPADDING=20 CELLSPACING=0>
<TR>
<TD CLASS="p"> 

<!-- IMAGE -->
<TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR>
<TD VALIGN="bottom"><IMG SRC="doc/bars.jpg"></TD>
</TR>
<TR>
<TD><FONT SIZE=1>Bars Visualization</FONT></TD>
</TR>
</TABLE>
<!-- END IMAGE -->

</TD>
<TD CLASS="p">

<!-- IMAGE -->
<TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR>
<TD VALIGN="bottom"><IMG SRC="doc/dialog.jpg"></TD>
</TR>
<TR>
<TD><FONT SIZE=1>Properties Dialog</FONT></TD>
</TR>
</TABLE>
<!-- END IMAGE -->

</TD>

<!-- SPACER -->
<TD WIDTH=100%>&nbsp;</TD>
<!-- END SPACER -->

</TD>
</TR>
</TABLE>
<!-- END IMAGE LIST -->

<BR clear="left">
<BR clear="left">
<BR clear="left">

<FONT CLASS="h2">Spectrum Wheel Visualization</FONT><BR>
The Spectrum Wheel visualization shows a more interesting use of Direct3D. 
   The wheel represents the sound frequency much the same as the bar graph, 
   except wrapped around a center point. Cells further from the center represent
   higher volume at the given frequency. 
<P>
   The visualization is implemented as a simplified particle system, where cells 
   are emitted based on audio levels. Each particle spot is shared by two cells, 
   and if both cells are falling when that spot is signaled to fire, the bottom-most 
   cell will be recycled and fired again. For visual effect, falling cells 
   are stretched and the alpha value is faded. 
<P>
<!-- IMAGE LIST -->
<TABLE STYLE="border: 1px solid black" WIDTH="100%" BGCOLOR="#FFFFFF" CELLPADDING=20 CELLSPACING=0>
<TR>
<TD CLASS="p"> 

<!-- IMAGE -->
<TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0>
<TR><TD VALIGN="bottom"><IMG SRC="doc/spectrumwheel.jpg"></TD></TR>
<TR><TD><FONT SIZE=1>Spectrum Wheel Visualization</FONT></TD></TR>
</TABLE>
<!-- END IMAGE -->

</TD>

<!-- SPACER -->
<TD WIDTH=100%>&nbsp;</TD>
<!-- END SPACER -->

</TR>
</TABLE>
<!-- END IMAGE LIST -->

<!-- FOOTER - DO NOT MODIFY --> 
<BR clear="left">
<BR clear="left">
<BR clear="left">
<HR>
<CENTER>
Copyright (c) Microsoft Corporation. All rights reserved.
</CENTER>
<!-- END FOOTER -->

<!-- MASTER TABLE - DO NOT MODIFY -->
</TD>
</TR>
</TABLE>
<!-- END MASTER TABLE -->

</BODY>
</HTML>