<doc>
  <assembly>
    <name>Microsoft.DirectX.AudioVideoPlayback</name>
  </assembly>
  <members>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.Audio">
      <summary>The <see cref="T:Microsoft.DirectX.AudioVideoPlayback.Audio" /> class plays audio files, or controls the audio settings for a <see cref="T:Microsoft.DirectX.AudioVideoPlayback.Video" /> object. This class is primarily designed for very simple playback scenarios.</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Audio.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Audio.Ending">
      <summary>Occurs when the file is ending</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Audio.Pausing">
      <summary>Occurs when the file is pausing</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Audio.Starting">
      <summary>Occurs when the file is starting</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Audio.Stopping">
      <summary>Occurs when the file is stopping</summary>
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.#ctor(System.String)">
      <summary>Initializes a new instance of the object and opens an audio file for playback, but does not start playback.</summary>
      <param name="fileName">Specifies the name of the file.</param>
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the object and opens an audio file for playback, and optionally starts playback.</summary>
      <param name="fileName">Specifies the name of the file.</param>
      <param name="autoRun">A Boolean value: use <b>true</b> to automatically start playback, or <b>false</b> to open the file but not play it.</param>
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.FromFile(System.String)">
      <summary>Load a new audio object from a file</summary>
      <param name="filename" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.FromFile(System.String,System.Boolean)">
      <summary>Load a new audio object from a file</summary>
      <param name="filename" />
      <param name="autorun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.FromUrl(System.String)">
      <summary>Load a new audio object from an URL</summary>
      <param name="address" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.FromUrl(System.String,System.Boolean)">
      <summary>Load a new audio object from an URL</summary>
      <param name="address" />
      <param name="autorun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Open(System.String)">
      <summary>Load a new audio object from a file</summary>
      <param name="fileName" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Open(System.String,System.Boolean)">
      <summary>Load a new audio object from a file</summary>
      <param name="fileName" />
      <param name="autoRun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.OpenUrl(System.String)">
      <summary>Load a new audio object from an URL</summary>
      <param name="address" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.OpenUrl(System.String,System.Boolean)">
      <summary>Load a new audio object from an URL</summary>
      <param name="address" />
      <param name="autoRun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Pause">
      <summary>Pause the audio</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Play">
      <summary>Play the audio</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.raise_Ending(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.raise_Pausing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.raise_Starting(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.raise_Stopping(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.SeekCurrentPosition(System.Double,Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags)">
      <summary>Seek to a position</summary>
      <param name="time" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.SeekStopPosition(System.Double,Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags)">
      <summary>Seek to a position</summary>
      <param name="time" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.Stop">
      <summary>Stop the file</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Audio.StopWhenReady">
      <summary>Stop the file when ready</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Balance">
      <summary>Modify the audio's balance</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.CurrentPosition">
      <summary>Get or set the current position</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Duration">
      <summary>The audio's duration</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Paused">
      <summary>Paused state of the object</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Playing">
      <summary>Playing state of the object</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.SeekingCaps">
      <summary>Seeking capabilities of the object</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.State">
      <summary>State of the object</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Stopped">
      <summary>Stopped state of the object</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.StopPosition">
      <summary>Stopped position</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Audio.Volume">
      <summary>Volume of the audio stream</summary>
    </member>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.TextureRenderEventArgs">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.TextureRenderEventArgs.Texture">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.Video">
      <summary>Use the Video class to play video files, including those that contain audio.</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Video.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Video.Ending">
      <summary>Occurs when the file is ending</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Video.Pausing">
      <summary>Occurs when the file is pausing</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Video.Starting">
      <summary>Occurs when the file is starting</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Video.Stopping">
      <summary>Occurs when the file is stopping</summary>
    </member>
    <member name="E:Microsoft.DirectX.AudioVideoPlayback.Video.TextureReadyToRender">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="fileName" />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="fileName" />
      <param name="autoRun" />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.FromFile(System.String)">
      <summary>Load a new video object from a file</summary>
      <param name="filename" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.FromFile(System.String,System.Boolean)">
      <summary>Load a new video object from a file</summary>
      <param name="filename" />
      <param name="autorun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.FromUrl(System.String)">
      <summary>Load a new video object from an URL</summary>
      <param name="address" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.FromUrl(System.String,System.Boolean)">
      <summary>Load a new video object from an URL</summary>
      <param name="address" />
      <param name="autorun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.HideCursor">
      <summary>Hide the cursor when viewing movie</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Open(System.String)">
      <summary>Load a new video object from a file</summary>
      <param name="fileName" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Open(System.String,System.Boolean)">
      <summary>Load a new video object from a file</summary>
      <param name="fileName" />
      <param name="autoRun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.OpenUrl(System.String)">
      <summary>Load a new video object from an URL</summary>
      <param name="address" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.OpenUrl(System.String,System.Boolean)">
      <summary>Load a new video object from an URL</summary>
      <param name="address" />
      <param name="autoRun" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Pause">
      <summary>Pause the video</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Play">
      <summary>Play the video</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.raise_Ending(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.raise_Pausing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.raise_Starting(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.raise_Stopping(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.raise_TextureReadyToRender(System.Object,Microsoft.DirectX.AudioVideoPlayback.TextureRenderEventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.RenderToTexture(Microsoft.DirectX.Direct3D.Device)">
      <summary />
      <param name="graphicsDevice" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.SeekCurrentPosition(System.Double,Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags)">
      <summary>Seek to a position</summary>
      <param name="time" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.SeekStopPosition(System.Double,Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags)">
      <summary>Seek to a position</summary>
      <param name="time" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.ShowCursor">
      <summary>Show the cursor while playing video</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.Stop">
      <summary>Stop the video</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.AudioVideoPlayback.Video.StopWhenReady">
      <summary>Stop the video when ready</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Audio">
      <summary>The audio object this video is using</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.AverageTimePerFrame">
      <summary>Average time per frame</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Caption">
      <summary>Caption of the default video window</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.CurrentPosition">
      <summary>Current position of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.DefaultSize">
      <summary>Default size of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Disposed">
      <summary>true if the object is disposed; otherwise, false</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Duration">
      <summary>Duration of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Fullscreen">
      <summary>Fullscreen mode of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.IsCursorHidden">
      <summary>Cursor status for the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.MaximumIdealSize">
      <summary>Maximum ideal size of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.MinimumIdealSize">
      <summary>Minimum ideal size of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Owner">
      <summary>Parent window of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Paused">
      <summary>Paused state of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Playing">
      <summary>Playing state of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.SeekingCaps">
      <summary>Seeking capabilities of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Size">
      <summary>Size of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.State">
      <summary>State of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.Stopped">
      <summary>Stopped state of the video</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.Video.StopPosition">
      <summary>Stop position of the video</summary>
    </member>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.TextureRenderEventHandler">
      <summary />
      <param name="sender" />
      <param name="e" />
    </member>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags">
      <summary>Define the type of seek</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags.NoFlush">
      <summary>Do not flush</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags.SeekToKeyFrame">
      <summary>Seek to the nearest key frame. This might be faster, but less accurate.</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags.IncrementalPositioning">
      <summary>The stop position is relative to the current position.</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags.RelativePositioning">
      <summary>The specified position is relative to the previous value.</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.SeekPositionFlags.AbsolutePositioning">
      <summary>The specified position is absolute.</summary>
    </member>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.StateFlags">
      <summary>Describing object state</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.StateFlags.Running">
      <summary>Object is running</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.StateFlags.Paused">
      <summary>Object is paused</summary>
    </member>
    <member name="F:Microsoft.DirectX.AudioVideoPlayback.StateFlags.Stopped">
      <summary>Object is stopped</summary>
    </member>
    <member name="T:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps">
      <summary>Specifies the seeking capabilities of a media stream.</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps.CanGetCurrentPosition">
      <summary>The stream can report its current position</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps.CanGetDuration">
      <summary>The stream can report its duration.</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps.CanGetStopPosition">
      <summary>The stream can report its stop position.</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps.CanSeekAbsolute">
      <summary>The stream can seek to an absolute position.</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps.CanSeekBackwards">
      <summary>The stream can seek backward.</summary>
    </member>
    <member name="P:Microsoft.DirectX.AudioVideoPlayback.SeekingCaps.CanSeekForwards">
      <summary>The stream can seek forward.</summary>
    </member>
  </members>
</doc>