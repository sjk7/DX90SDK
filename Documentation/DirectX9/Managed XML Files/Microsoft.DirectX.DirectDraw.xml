<doc>
  <assembly>
    <name>Microsoft.DirectX.DirectDraw</name>
  </assembly>
  <members>
    <member name="T:Microsoft.DirectX.DirectDraw.CannotCloneException">
      <summary>Primary surfaces, or surfaces that are implicitly created, cannot be duplicated.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCloneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCloneException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCloneException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCloneException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CannotCreateDeviceContextException">
      <summary>Windows cannot create any more device contexts (DCs), or a DC has requested a palette-indexed surface when the surface had no palette and the display mode was not palette-indexed (in this case DirectDraw cannot select a proper palette into the DC).</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCreateDeviceContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCreateDeviceContextException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCreateDeviceContextException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotCreateDeviceContextException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CannotLockSurfaceException">
      <summary>Access to this surface is refused because an attempt was made to lock the primary surface without DCI support.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotLockSurfaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotLockSurfaceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotLockSurfaceException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotLockSurfaceException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CannotPageLockException">
      <summary>An attempt to page-lock a surface failed. Page lock does not work on a display-memory surface or an emulated primary surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageLockException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageLockException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageLockException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CannotPageUnlockException">
      <summary>An attempt to page-unlock a surface failed. Page unlock does not work on a display-memory surface or an emulated primary surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageUnlockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageUnlockException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageUnlockException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CannotPageUnlockException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CapsComplexRequiredException">
      <summary>The surface requires the Complex flag.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CapsComplexRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CapsComplexRequiredException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CapsComplexRequiredException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CapsComplexRequiredException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Clipper">
      <summary>Applications use the methods of the Clipper object to manage clip lists.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectDraw.Clipper.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.#ctor(Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.op_Equality(Microsoft.DirectX.DirectDraw.Clipper,Microsoft.DirectX.DirectDraw.Clipper)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.op_Inequality(Microsoft.DirectX.DirectDraw.Clipper,Microsoft.DirectX.DirectDraw.Clipper)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Clipper.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Clipper.ClipList">
      <summary>Retrieves or sets a copy of the clip list associated with a <see cref="T:Microsoft.DirectX.DirectDraw.Clipper" /> object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Clipper.Disposed">
      <summary>Retrieves a value that is true if the <see cref="T:Microsoft.DirectX.DirectDraw.Clipper" /> object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Clipper.Window">
      <summary>Retrieves or sets the window previously associated with this <see cref="T:Microsoft.DirectX.DirectDraw.Clipper" /> object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ClipperIsUsingWindowException">
      <summary>An attempt was made to set a clip list for a DirectDrawClipper object that is already monitoring a window handle.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ClipperIsUsingWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ClipperIsUsingWindowException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ClipperIsUsingWindowException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ClipperIsUsingWindowException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ColorControl">
      <summary>The ColorControl object allows you to get and set color controls.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectDraw.ColorControl.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.#ctor(Microsoft.DirectX.DirectDraw.Surface)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="surf" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.op_Equality(Microsoft.DirectX.DirectDraw.ColorControl,Microsoft.DirectX.DirectDraw.ColorControl)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.op_Inequality(Microsoft.DirectX.DirectDraw.ColorControl,Microsoft.DirectX.DirectDraw.ColorControl)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControl.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControl.ColorControls">
      <summary>Values to be applied to the specified surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControl.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ColorKeyNotSetException">
      <summary>No source color key is specified for this operation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKeyNotSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKeyNotSetException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKeyNotSetException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKeyNotSetException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CurrentlyNotAvailableException">
      <summary>No support is currently available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CurrentlyNotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CurrentlyNotAvailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CurrentlyNotAvailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.CurrentlyNotAvailableException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DDrawHelper">
      <summary>Utility class</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DDrawHelper.KeyHardwareDescription">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DDrawHelper.KeyHardwareDriverName">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DDrawHelper.PathHardware">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DDrawHelper.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DDrawHelper.GetWhqlDay(System.Int32)">
      <summary>Get the Windows Hardware Quality Labs Day.</summary>
      <param name="whqlLevel" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DDrawHelper.GetWhqlMonth(System.Int32)">
      <summary>Get the Windows Hardware Quality Labs Month.</summary>
      <param name="whqlLevel" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DDrawHelper.GetWhqlYear(System.Int32)">
      <summary>Get the Windows Hardware Quality Labs Year.</summary>
      <param name="whqlLevel" />
      <returns />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Device">
      <summary>Applications use the methods of the Device object to create DirectDraw objects and work with system-level variables.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectDraw.Device.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.#ctor(Microsoft.DirectX.DirectDraw.CreateFlags)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="flags" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.#ctor(System.Guid)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="guidDevice" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.FlipToGdiSurface">
      <summary>Makes the surface that the GDI writes to the primary surface.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.GetAvailableVideoMemory(Microsoft.DirectX.DirectDraw.SurfaceCaps,System.Int32@,System.Int32@)">
      <summary>Retrieves the total amount of display memory available and the amount of display memory currently free for a given type of surface.</summary>
      <param name="caps" />
      <param name="totalMem" />
      <param name="freeMem" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.GetCaps">
      <summary>Fills in the capabilities of the device driver for the hardware and the hardware emulation layer (HEL).</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.GetDeviceInformation(Microsoft.DirectX.DirectDraw.GetDeviceFlags)">
      <summary>Obtains information about the driver. This method can be used, with caution, to recognize specific hardware installations to implement workarounds for poor driver or chipset behavior.</summary>
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.GetSurfaceFromDC(System.IntPtr)">
      <summary>Retrieves the Surface object for a surface, based on its GDI device context handle.</summary>
      <param name="dcHandle" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.op_Equality(Microsoft.DirectX.DirectDraw.Device,Microsoft.DirectX.DirectDraw.Device)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.op_Inequality(Microsoft.DirectX.DirectDraw.Device,Microsoft.DirectX.DirectDraw.Device)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.RestoreAllSurfaces">
      <summary>Restores all the surfaces created for the DirectDraw object, in the order that they were created.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.RestoreDisplayMode">
      <summary>Resets the mode of the display device hardware for the primary surface to what it was before the SetDisplayMode method was called. Exclusive-level access is required to use this method.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.SetCooperativeLevel(System.Windows.Forms.Control,Microsoft.DirectX.DirectDraw.CooperativeLevelFlags)">
      <summary>Determines the top-level behavior of the application.</summary>
      <param name="parent" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.SetDisplayMode(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the mode of the display-device hardware.</summary>
      <param name="width" />
      <param name="height" />
      <param name="bitPerPixel" />
      <param name="refreshRate" />
      <param name="standardVgaMode" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.TestCooperativeLevel">
      <summary>Reports the current cooperative-level status of the device for a windowed or full-screen application.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Device.WaitForVerticalBlank(Microsoft.DirectX.DirectDraw.WaitVbFlags)">
      <summary>Helps the application synchronize itself with the vertical-blank interval.</summary>
      <param name="flags" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.DeviceInformation">
      <summary>Information about a device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.DisplayMode">
      <summary>Retrieves the current display mode.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.FourCCCodes">
      <summary>Retrieves the FOURCC codes supported by the DirectDraw object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.GdiSurface">
      <summary>Retrieves the DirectDrawSurface object that currently represents the surface memory that GDI is treating as the primary surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.HardwareCaps">
      <summary>Capabilities of the device driver for the hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.HardwareEmulationCaps">
      <summary>Capabilities of the device driver for the hardware emulation layer (HEL).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.MonitorFrequency">
      <summary>Retrieves the frequency of the monitor being driven by the DirectDraw object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.ScanLine">
      <summary>Retrieves the scan line that is currently being drawn on the monitor.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Device.VerticalBlankStatus">
      <summary>Retrieves the status of the vertical blank.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DeviceDoesNotOwnSurfaceException">
      <summary>Surfaces created by one DirectDraw device cannot be used directly by another DirectDraw device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceDoesNotOwnSurfaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceDoesNotOwnSurfaceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceDoesNotOwnSurfaceException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceDoesNotOwnSurfaceException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DevicesCollection">
      <summary>Collection of devices.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DevicesCollection.#ctor(Microsoft.DirectX.DirectDraw.GetDevicesFlags)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="flags" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DevicesCollection.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DevicesCollection.GetEnumerator">
      <summary>Gets an enumerator for this collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DevicesCollection.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DevicesCollection.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DevicesCollection.Count">
      <summary>Gets the number of elements.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DevicesCollection.Current">
      <summary>Gets the current element in the collection.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DisplayModesCollection">
      <summary>Collection of display modes.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DisplayModesCollection.#ctor(Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DisplayModesCollection.#ctor(Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DisplayModesCollection.#ctor(Microsoft.DirectX.DirectDraw.GetDisplayModeFlags,Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="flags" />
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DisplayModesCollection.GetEnumerator">
      <summary>Gets an enumerator for this collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DisplayModesCollection.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DisplayModesCollection.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DisplayModesCollection.Count">
      <summary>Gets the number of elements.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DisplayModesCollection.Current">
      <summary>Gets the current element in the collection.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DrawFastCannotClipException">
      <summary>A DirectDrawClipper object is attached to a source surface that has passed into a call to the DrawFast method.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DrawFastCannotClipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DrawFastCannotClipException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DrawFastCannotClipException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DrawFastCannotClipException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ExclusiveModeAlreadySetException">
      <summary>An attempt was made to set the cooperative level when it was already set to exclusive.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExclusiveModeAlreadySetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExclusiveModeAlreadySetException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExclusiveModeAlreadySetException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExclusiveModeAlreadySetException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ExpiredException">
      <summary>The data has expired and is therefore no longer valid.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExpiredException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExpiredException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ExpiredException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GammaControl">
      <summary>Applications use the methods of the GammaControl object to adjust the red, green, and blue gamma ramp levels of the primary surface.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectDraw.GammaControl.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.#ctor(Microsoft.DirectX.DirectDraw.Surface)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="surf" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.op_Equality(Microsoft.DirectX.DirectDraw.GammaControl,Microsoft.DirectX.DirectDraw.GammaControl)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.op_Inequality(Microsoft.DirectX.DirectDraw.GammaControl,Microsoft.DirectX.DirectDraw.GammaControl)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaControl.SetGammaRamp(System.Boolean,Microsoft.DirectX.DirectDraw.GammaRamps)">
      <summary>Sets the red, green, and blue gamma ramps for the primary surface.</summary>
      <param name="calibrate" />
      <param name="ramps" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.GammaControl.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.GammaControl.GammaRamp">
      <summary>Retrieves or sets the red, green, and blue gamma ramps for the primary surface.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GraphicsAlreadyCreatedException">
      <summary>A device context (DC) has already been returned for this surface. Only one DC can be retrieved for each surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsAlreadyCreatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsAlreadyCreatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsAlreadyCreatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsAlreadyCreatedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GraphicsException">
      <summary>Base exception class for all DirectDraw exceptions. Derives from DirectXException.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GraphicsException.GetExceptionFromResultInternal(System.Int32)">
      <summary />
      <param name="resultCode" />
      <returns />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.HeightAlignException">
      <summary>The height of the provided rectangle is not a multiple of the required alignment.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.HeightAlignException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.HeightAlignException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.HeightAlignException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.HeightAlignException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ImplicitlyCreatedException">
      <summary>The surface cannot be restored because it is an implicitly created surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ImplicitlyCreatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ImplicitlyCreatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ImplicitlyCreatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ImplicitlyCreatedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.IncompatiblePrimaryException">
      <summary>The primary surface creation request does not match the existing primary surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.IncompatiblePrimaryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.IncompatiblePrimaryException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.IncompatiblePrimaryException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.IncompatiblePrimaryException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidCapsException">
      <summary>One or more of the capability bits passed to the callback function are incorrect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidCapsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidCapsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidCapsException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidCapsException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidClipListException">
      <summary>DirectDraw does not support the provided clip list.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidClipListException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidClipListException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidClipListException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidClipListException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidDirectDrawGuidException">
      <summary>The globally unique identifier (Guid) passed to the constructor is not a valid DirectDraw driver identifier.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidDirectDrawGuidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidDirectDrawGuidException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidDirectDrawGuidException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidDirectDrawGuidException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidModeException">
      <summary>DirectDraw does not support the requested mode.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidModeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidModeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidModeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidObjectException">
      <summary>DirectDraw received a reference that was an invalid DirectDraw object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidObjectException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidObjectException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidObjectException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidPixelFormatException">
      <summary>The pixel format was invalid as specified.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPixelFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPixelFormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPixelFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPixelFormatException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidPositionException">
      <summary>The position of the overlay on the destination is no longer legal.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPositionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPositionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPositionException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidPositionException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidRectangleException">
      <summary>The provided rectangle was invalid.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidRectangleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidRectangleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidRectangleException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidRectangleException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidStreamException">
      <summary>The specified stream contains invalid data.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidStreamException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidStreamException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidStreamException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.InvalidSurfaceTypeException">
      <summary>The surface was of the wrong type.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidSurfaceTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidSurfaceTypeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidSurfaceTypeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.InvalidSurfaceTypeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.LockedSurfacesException">
      <summary>One or more surfaces are locked, causing the failure of the requested operation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.LockedSurfacesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.LockedSurfacesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.LockedSurfacesException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.LockedSurfacesException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.MoreDataException">
      <summary>There is more data available than the specified buffer size can hold.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.MoreDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.MoreDataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.MoreDataException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.MoreDataException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NewModeException">
      <summary>When StartModeTest is called with the IsTestRequired flag, it may throw this exception to denote that some or all of the resolutions can and should be tested. EvaluateMode throws this exception to indicate that the test has switched to a new display mode.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NewModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NewModeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NewModeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NewModeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoAlphaHardwareException">
      <summary>No alpha-acceleration hardware is present or available, causing the failure of the requested operation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoAlphaHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoAlphaHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoAlphaHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoAlphaHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoClipListException">
      <summary>No clip list is available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipListException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipListException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipListException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipListException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoClipperAttachedException">
      <summary>No DirectDrawClipper object is attached to the surface object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipperAttachedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipperAttachedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipperAttachedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoClipperAttachedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoColorConversionHardwareException">
      <summary>No color-conversion hardware is present or available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorConversionHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorConversionHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorConversionHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorConversionHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoColorKeyException">
      <summary>The surface does not currently have a color key.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoColorKeyHardwareException">
      <summary>There is no hardware support for the destination color key.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoColorKeyHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoCooperativeLevelSetException">
      <summary>A create function was called without the SetCooperativeLevel method.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoCooperativeLevelSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoCooperativeLevelSetException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoCooperativeLevelSetException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoCooperativeLevelSetException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoDeviceContextException">
      <summary>No device context (DC) has ever been created for this surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDeviceContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDeviceContextException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDeviceContextException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDeviceContextException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoDirectDrawHardwareException">
      <summary>Hardware-only DirectDraw object creation is not possible; the driver does not support any hardware.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoDirectDrawSupportException">
      <summary>DirectDraw support is not possible with the current display driver.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawSupportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawSupportException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawSupportException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDirectDrawSupportException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoDrawHardwareException">
      <summary>No blitter hardware is present.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDrawHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDrawHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDrawHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDrawHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoDriverSupportException">
      <summary>Testing cannot proceed because the display adapter driver does not enumerate refresh rates.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDriverSupportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDriverSupportException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDriverSupportException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoDriverSupportException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoEmulationException">
      <summary>Software emulation is not available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoEmulationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoEmulationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoEmulationException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoEmulationException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoExclusiveModeException">
      <summary>The operation requires the application to have exclusive mode, but the application does not have exclusive mode.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoExclusiveModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoExclusiveModeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoExclusiveModeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoExclusiveModeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoFlipHardwareException">
      <summary>Flipping visible surfaces is not supported.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFlipHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFlipHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFlipHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFlipHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoFocusWindowException">
      <summary>An attempt was made to create or set a device window without first setting the focus window.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFocusWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFocusWindowException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFocusWindowException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoFocusWindowException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoGdiException">
      <summary>No GDI is present.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoGdiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoGdiException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoGdiException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoGdiException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoMirrorHardwareException">
      <summary>No mirroring hardware is present or available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMirrorHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMirrorHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMirrorHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMirrorHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoMonitorInformationException">
      <summary>Testing cannot proceed because the monitor has no associated EDID data.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMonitorInformationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMonitorInformationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMonitorInformationException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoMonitorInformationException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoNonLocalVideoMemoryException">
      <summary>An attempt was made to allocate nonlocal video memory from a device that does not support nonlocal video memory.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoNonLocalVideoMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoNonLocalVideoMemoryException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoNonLocalVideoMemoryException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoNonLocalVideoMemoryException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoOptimizeHardwareException">
      <summary>The device does not support optimized surfaces.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOptimizeHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOptimizeHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOptimizeHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOptimizeHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoOverlayDestinationException">
      <summary>The GetOverlayPosition method is called on an overlay that the UpdateOverlay method has not been called on to establish as a destination.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayDestinationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayDestinationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayDestinationException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayDestinationException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoOverlayHardwareException">
      <summary>No overlay hardware is present or available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoOverlayHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoPaletteAttachedException">
      <summary>No palette object is attached to this surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteAttachedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteAttachedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteAttachedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteAttachedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoPaletteHardwareException">
      <summary>There is no hardware support for 16- or 256-color palettes.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoPaletteHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoRasterOperationHardwareException">
      <summary>No appropriate raster-operation hardware is present or available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRasterOperationHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRasterOperationHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRasterOperationHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRasterOperationHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoRotationHardwareException">
      <summary>No rotation hardware is present or available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRotationHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRotationHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRotationHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoRotationHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoStereoHardwareException">
      <summary>There is no stereo hardware present or available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStereoHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStereoHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStereoHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStereoHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoStretchHardwareException">
      <summary>There is no hardware support for stretching.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStretchHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStretchHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStretchHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoStretchHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoSurfaceLeftException">
      <summary>There is no hardware present that supports stereo surfaces.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoSurfaceLeftException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoSurfaceLeftException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoSurfaceLeftException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoSurfaceLeftException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Not4BitColorException">
      <summary>The DirectDrawSurface object is not using a 4-bit color palette, and the requested operation requires a 4-bit color palette.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Not4BitColorIndexException">
      <summary>The DirectDrawSurface object is not using a 4-bit color index palette, and the requested operation requires a 4-bit color index palette.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorIndexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorIndexException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorIndexException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not4BitColorIndexException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Not8BitColorException">
      <summary>The DirectDrawSurface object is not using an 8-bit color palette, and the requested operation requires an 8-bit color palette.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not8BitColorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not8BitColorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not8BitColorException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Not8BitColorException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotAnOverlaySurfaceException">
      <summary>An overlay component is called for a nonoverlay surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotAnOverlaySurfaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotAnOverlaySurfaceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotAnOverlaySurfaceException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotAnOverlaySurfaceException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotFlippableException">
      <summary>An attempt was made to flip a surface that cannot be flipped.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFlippableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFlippableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFlippableException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFlippableException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotFoundException">
      <summary>The requested item was not found.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotFoundException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotLoadedException">
      <summary>The surface is an optimized surface, but it has not yet been allocated any memory.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLoadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLoadedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLoadedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLoadedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotLockedException">
      <summary>An attempt was made to unlock a surface that was not locked.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLockedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLockedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotLockedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotPageLockedException">
      <summary>An attempt was made to page-unlock a surface with no outstanding page locks.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPageLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPageLockedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPageLockedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPageLockedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NotPalettizedException">
      <summary>The surface being used is not a palette-based surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPalettizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPalettizedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPalettizedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NotPalettizedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoVideoSyncHardwareException">
      <summary>There is no hardware support for vertical blank-synchronized operations.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoVideoSyncHardwareException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoVideoSyncHardwareException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoVideoSyncHardwareException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoVideoSyncHardwareException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.NoWindowException">
      <summary>Clipper notification requires a window, or no window has been previously set as the cooperative level window</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoWindowException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoWindowException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.NoWindowException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OutOfCapsException">
      <summary>The hardware needed for the requested operation has already been allocated.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfCapsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfCapsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfCapsException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfCapsException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OutOfVideoMemoryException">
      <summary>DirectDraw does not have enough display memory to perform the operation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfVideoMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfVideoMemoryException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfVideoMemoryException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OutOfVideoMemoryException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlappingRectanglesException">
      <summary>The source and destination rectangles are on the same surface and overlap each other.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlappingRectanglesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlappingRectanglesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlappingRectanglesException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlappingRectanglesException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayCantClipException">
      <summary>The hardware does not support clipped overlays.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayCantClipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayCantClipException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayCantClipException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayCantClipException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayColorKeyOnlyOneActiveException">
      <summary>An attempt was made to have more than one color key active on an overlay.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayColorKeyOnlyOneActiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayColorKeyOnlyOneActiveException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayColorKeyOnlyOneActiveException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayColorKeyOnlyOneActiveException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayNotVisibleException">
      <summary>The GetOverlayPosition method was called on a hidden overlay.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayNotVisibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayNotVisibleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayNotVisibleException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayNotVisibleException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Palette">
      <summary>Applications use the methods of the Palette object to create DirectDrawPalette objects</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectDraw.Palette.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.#ctor(Microsoft.DirectX.DirectDraw.Device,System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="device" />
      <param name="file" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.#ctor(Microsoft.DirectX.DirectDraw.Device,Microsoft.DirectX.DirectDraw.PaletteCaps,Microsoft.DirectX.DirectDraw.PaletteEntry[])">
      <summary>Initializes a new instance of the object.</summary>
      <param name="device" />
      <param name="flags" />
      <param name="palette" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.#ctor(Microsoft.DirectX.DirectDraw.Surface)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="surf" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.GetEntries(System.Int32,System.Int32)">
      <summary>Queries palette values from a DirectDrawPalette object.</summary>
      <param name="base" />
      <param name="numEntries" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.op_Equality(Microsoft.DirectX.DirectDraw.Palette,Microsoft.DirectX.DirectDraw.Palette)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.op_Inequality(Microsoft.DirectX.DirectDraw.Palette,Microsoft.DirectX.DirectDraw.Palette)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Palette.SetEntries(System.Int32,Microsoft.DirectX.DirectDraw.PaletteEntry[])">
      <summary>Changes entries in a DirectDrawPalette object immediately.</summary>
      <param name="base" />
      <param name="entries" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Palette.Caps">
      <summary>Retrieves the capabilities of this palette object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Palette.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.PaletteBusyException">
      <summary>Access to this palette is refused because the palette is locked by another thread.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteBusyException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteBusyException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.PrimarySurfaceAlreadyExistsException">
      <summary>This process has already created a primary surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PrimarySurfaceAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PrimarySurfaceAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PrimarySurfaceAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PrimarySurfaceAlreadyExistsException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.RegionTooSmallException">
      <summary>The region passed to the Clipper.ClipList property is too small.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.RegionTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.RegionTooSmallException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.RegionTooSmallException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.RegionTooSmallException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Surface">
      <summary>A surface represents a linear area of display memory. A surface usually resides in the display memory of the display card, although surfaces can exist in system memory. Unless specifically instructed otherwise during the creation of the Surface object, DirectDraw will put the Surface object wherever the best performance can be achieved given the requested capabilities. Surface objects can take advantage of specialized processors on display cards, not only to perform certain tasks faster, but to perform some tasks in parallel with the system CPU.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectDraw.Surface.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.ChangeUniquenessValue">
      <summary>Manually updates the uniqueness value for this surface.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Clone">
      <summary>Duplicates the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.ColorFill(System.Drawing.Color)">
      <summary>Fills a surface with a color.</summary>
      <param name="fillValue" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.ColorFill(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Fills a surface with a color.</summary>
      <param name="destRectangle" />
      <param name="fillValue" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.ColorFill(System.Int32)">
      <summary>Fills a surface with a color.</summary>
      <param name="fillValue" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.ColorFill(System.Drawing.Rectangle,System.Int32)">
      <summary>Fills a surface with a color.</summary>
      <param name="destRectangle" />
      <param name="fillValue" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.#ctor(System.IO.Stream,Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.#ctor(System.Drawing.Bitmap,Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.#ctor(System.String,Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="filename" />
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.#ctor(Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.DrawFlags)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="sourceSurface" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.DrawFlags)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="destRectangle" />
      <param name="sourceSurface" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.DrawFlags)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="sourceSurface" />
      <param name="srcRectangle" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.DrawFlags)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="destRectangle" />
      <param name="sourceSurface" />
      <param name="srcRectangle" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.DrawFlags,Microsoft.DirectX.DirectDraw.DrawEffects)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="sourceSurface" />
      <param name="flags" />
      <param name="bltEffects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.DrawFlags,Microsoft.DirectX.DirectDraw.DrawEffects)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="destRectangle" />
      <param name="sourceSurface" />
      <param name="flags" />
      <param name="bltEffects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.DrawFlags,Microsoft.DirectX.DirectDraw.DrawEffects)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="sourceSurface" />
      <param name="srcRectangle" />
      <param name="flags" />
      <param name="bltEffects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Draw(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.DrawFlags,Microsoft.DirectX.DirectDraw.DrawEffects)">
      <summary>Performs a bit block transfer (blit).</summary>
      <param name="destRectangle" />
      <param name="sourceSurface" />
      <param name="srcRectangle" />
      <param name="flags" />
      <param name="bltEffects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawBox(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Retrieves a device context.</summary>
      <param name="left" />
      <param name="top" />
      <param name="right" />
      <param name="bottom" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawCircle(System.Int32,System.Int32,System.Int32)">
      <summary>Retrieves a device context.</summary>
      <param name="x" />
      <param name="y" />
      <param name="radius" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Retrieves a device context.</summary>
      <param name="x1" />
      <param name="y1" />
      <param name="x2" />
      <param name="y2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawFast(System.Int32,System.Int32,Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.DrawFastFlags)">
      <summary>Performs a source copy blit or transparent blit by using a source color key or destination color key.</summary>
      <param name="xcoord" />
      <param name="ycoord" />
      <param name="sourceSurface" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawFast(System.Int32,System.Int32,Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.DrawFastFlags)">
      <summary>Performs a source copy blit or transparent blit by using a source color key or destination color key.</summary>
      <param name="xcoord" />
      <param name="ycoord" />
      <param name="sourceSurface" />
      <param name="srcRectangle" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Retrieves a device context.</summary>
      <param name="x1" />
      <param name="y1" />
      <param name="x2" />
      <param name="y2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawRoundedBox(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Retrieves a device context.</summary>
      <param name="left" />
      <param name="top" />
      <param name="right" />
      <param name="bottom" />
      <param name="rw" />
      <param name="rh" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawText(System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>Retrieves a device context.</summary>
      <param name="x" />
      <param name="y" />
      <param name="text" />
      <param name="drawAtLastPosition" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.DrawToDc(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>Retrieves a device context.</summary>
      <param name="hdc" />
      <param name="destRect" />
      <param name="srcRect" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Flip(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.FlipFlags)">
      <summary>Makes the surface memory associated with the BackBuffer surface become associated with the front-buffer surface.</summary>
      <param name="surface" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.GetAttachedSurface(Microsoft.DirectX.DirectDraw.SurfaceCaps)">
      <summary>Obtains the attached surface that has the specified capabilities.</summary>
      <param name="caps" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.GetColorKey(Microsoft.DirectX.DirectDraw.ColorKeyFlags)">
      <summary>Retrieves the color key value for the DirectDrawSurface object.</summary>
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.GetDc">
      <summary>Retrieves a device context.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.GetOverlayPosition">
      <summary>Given a visible, active overlay surface, the GetOverlayPosition method returns the display coordinates of the surface</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Lock(Microsoft.DirectX.DirectDraw.LockFlags)">
      <summary>Allows manipulation of surface memory.</summary>
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Lock(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.LockFlags)">
      <summary>Allows manipulation of surface memory.</summary>
      <param name="destRectangle" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.op_Equality(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.Surface)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.op_Inequality(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.Surface)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.PageLock">
      <summary>Prevents a system-memory surface from being paged out while a blit operation that uses direct memory access (DMA) transfers to or from system memory is in progress.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.PageUnlock">
      <summary>Unlocks a system-memory surface, allowing it to be paged out.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.ReleaseDc(System.IntPtr)">
      <summary>Release a device context handle.</summary>
      <param name="hdc" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Restore">
      <summary>Restores a surface that has been lost. This occurs when the surface memory associated with the DirectDrawSurface object has been freed.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.SetColorKey(Microsoft.DirectX.DirectDraw.ColorKeyFlags,Microsoft.DirectX.DirectDraw.ColorKey)">
      <summary>Sets the color key value for the DirectDrawSurface object if the hardware supports color keys on a per-surface basis.</summary>
      <param name="flags" />
      <param name="value" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.SetOverlayPosition(System.Drawing.Point)">
      <summary>Changes the display coordinates of an overlay surface.</summary>
      <param name="position" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Unlock(System.Array)">
      <summary />
      <param name="data" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.Unlock(System.Drawing.Rectangle,System.Array)">
      <summary />
      <param name="destRectangle" />
      <param name="data" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.OverlayFlags)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="destSurface" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.OverlayFlags)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="srcRectangle" />
      <param name="destSurface" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.OverlayFlags)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="destSurface" />
      <param name="destRectangle" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.OverlayFlags)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="srcRectangle" />
      <param name="destSurface" />
      <param name="destRectangle" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.OverlayFlags,Microsoft.DirectX.DirectDraw.OverlayEffects)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="destSurface" />
      <param name="flags" />
      <param name="effects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.OverlayFlags,Microsoft.DirectX.DirectDraw.OverlayEffects)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="srcRectangle" />
      <param name="destSurface" />
      <param name="flags" />
      <param name="effects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.OverlayFlags,Microsoft.DirectX.DirectDraw.OverlayEffects)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="destSurface" />
      <param name="destRectangle" />
      <param name="flags" />
      <param name="effects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlay(System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.Surface,System.Drawing.Rectangle,Microsoft.DirectX.DirectDraw.OverlayFlags,Microsoft.DirectX.DirectDraw.OverlayEffects)">
      <summary>Repositions or modifies the visual attributes of an overlay surface.</summary>
      <param name="srcRectangle" />
      <param name="destSurface" />
      <param name="destRectangle" />
      <param name="flags" />
      <param name="effects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Surface.UpdateOverlayZOrder(Microsoft.DirectX.DirectDraw.OverlayZFlags,Microsoft.DirectX.DirectDraw.Surface)">
      <summary>Sets the z-order of an overlay.</summary>
      <param name="flags" />
      <param name="surface" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.CanDraw">
      <summary>Inquires whether a blit involving this surface can occur immediately.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.CanFlip">
      <summary>Inquires whether this surface can be flipped immediately.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.Caps">
      <summary>Retrieves the capabilities of the surface. These capabilities are not necessarily related to the capabilities of the display device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.Clipper">
      <summary>Retrieves or sets the <see cref="T:Microsoft.DirectX.DirectDraw.Clipper" /> object associated with this surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.DrawDevice">
      <summary>Retrives the device that was used to create the surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.DrawStyle">
      <summary>Current drawing style.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.DrawWidth">
      <summary>Current draw width</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.FillColor">
      <summary>Current fill color.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.FillStyle">
      <summary>Current fill style.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.FontBackColor">
      <summary>Current font back color.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.FontHandle(System.IntPtr)">
      <summary>Current font handle.</summary>
      <param name="value" />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.FontTransparency">
      <summary>Current font transparency.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.ForeColor">
      <summary>Current font foreground color.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.IsDrawDone">
      <summary>Inquires whether the blit is done, and returns true if the last blit on this surface has completed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.IsFlipDone">
      <summary>Inquires whether the flip has finished, and returns true if the last flip on this surface has completed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.IsLost">
      <summary>Determines whether the surface memory associated with a DirectDrawSurface object has been freed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.Palette">
      <summary>Retrieves or sets the <see cref="T:Microsoft.DirectX.DirectDraw.Palette" /> object associated with this surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.PixelFormat">
      <summary>Retrieves the color and pixel format of the surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.SurfaceDescription">
      <summary>Retrieves a description of the surface in its current condition.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Surface.UniquenessValue">
      <summary>Retrieves the current uniqueness value for this surface.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfaceBusyException">
      <summary>Access to the surface is refused because the surface is locked by another thread.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceBusyException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceBusyException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfaceCaps">
      <summary>Defines the capabilities of a DirectDrawSurface object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceCaps.Clear">
      <summary>Remove all set capabilities.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceCaps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.Alpha">
      <summary>This surface contains alpha-only information.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.BackBuffer">
      <summary>This surface is the back buffer of a surface flipping structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.Complex">
      <summary>A complex surface is being described. A complex surface results in the creation of more than one surface. The additional surfaces are attached to the root surface. The complex surface can be destroyed only by destroying the root.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.Flip">
      <summary>This surface is a part of a surface-flipping structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.FrontBuffer">
      <summary>This surface is the front buffer of a surface-flipping structure.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.HardwareCodec">
      <summary>This surface can have a stream decompressed to it by the hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.LiveVideo">
      <summary>This surface can receive live video.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.LocalVideoMemory">
      <summary>This surface exists in true, local video memory, rather than nonlocal video memory. If this flag is specified, VideoMemory must be specified, as well. This flag cannot be used with the NonLocalVideoMemory flag.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.ModeX">
      <summary>This surface is a 320×200 or 320×240 Mode X surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.NonLocalVideoMemory">
      <summary>This surface exists in nonlocal video memory, rather than true, local video memory. If this flag is specified, VideoMemory flag must be specified, as well. This cannot be used with the LocalVideoMemory flag.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.OffScreenPlain">
      <summary>This surface is any off-screen surface that is not an overlay, front-buffer, back-buffer, or alpha surface. It is used to identify plain surfaces.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.Overlay">
      <summary>This surface is an overlay. It might or might not be directly visible, depending on whether it is currently being overlaid onto the primary surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.OwnGraphics">
      <summary>This surface has a device context (DC) association for a long period of time.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.Palette">
      <summary>This device driver allows unique DirectDrawPalette objects to be created and attached to this surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.PrimarySurface">
      <summary>The surface is the primary surface. It represents what is currently visible.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.StandardVgaMode">
      <summary>This surface is a standard VGA mode surface, and not a Mode X surface. This flag cannot be used in combination with the ModeX flag.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.StereoSurfaceLeft">
      <summary>This surface is part of a stereo flipping chain.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.SystemMemory">
      <summary>This surface memory was allocated in system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.VideoMemory">
      <summary>This surface exists in display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.VideoPort">
      <summary>This surface can receive data from a video port.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.Visible">
      <summary>Changes made to this surface are immediately visible. It is always set for the primary surface, as well as for overlays while they are being overlaid and texture maps while they are being textured.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceCaps.WriteAccessOnly">
      <summary>Only write access is permitted to the surface. Read access from the surface can cause a general protection (GP) fault, and the read results from this surface would not be meaningful.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfaceDescription">
      <summary>A description of a surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceDescription.Clear">
      <summary>Reset the object back to defaults.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceDescription.#ctor(Microsoft.DirectX.DirectDraw.SurfaceCaps)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="caps" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceDescription.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.AlphaBitDepth">
      <summary>The AlphaBitDepth member is valid.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.BackBufferCount">
      <summary>The BackBufferCount member is valid.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.DestinationDraw">
      <summary>Describes the destination color key for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.DestinationOverlay">
      <summary>Describes the source color key for an overlay surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.EmptyFaceColor">
      <summary>Empty face color</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.Height">
      <summary>Dimensions of the surface to be created, in pixels.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.LinearSize">
      <summary>Size of the buffer. Currently returned only for compressed texture surfaces.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.Pitch">
      <summary>Distance, in bytes, to the start of next line.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.PixelFormatStructure">
      <summary>Describes the pixel format of the surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.RefreshRate">
      <summary>Refresh rate (used when the display mode is described). The value of 0 indicates an adapter default.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.SourceDraw">
      <summary>Describes the source color key for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.SourceOverlay">
      <summary>Describes the source color key for an overlay surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.SurfaceCaps">
      <summary>The capabilities of the surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfaceDescription.Width">
      <summary>Dimensions of the surface to be created, in pixels.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfaceIsObscuredException">
      <summary>Access to the surface is refused because the surface is obscured.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceIsObscuredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceIsObscuredException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceIsObscuredException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceIsObscuredException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfaceLostException">
      <summary>Access to the surface is refused because the surface memory is gone. Call the Surface.Restore method on this surface to restore the memory associated</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceLostException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfaceNotAttachedException">
      <summary>The requested surface is not attached.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceNotAttachedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceNotAttachedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceNotAttachedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfaceNotAttachedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.SurfacesCollection">
      <summary>A collection of surfaces.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.#ctor(Microsoft.DirectX.DirectDraw.OverlayZOrdersFlags,Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="flags" />
      <param name="surf" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.#ctor(Microsoft.DirectX.DirectDraw.Surface,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="surf" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.#ctor(Microsoft.DirectX.DirectDraw.GetSurfacesFlags,Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="flags" />
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.#ctor(Microsoft.DirectX.DirectDraw.SurfaceDescription,Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="desc" />
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.#ctor(Microsoft.DirectX.DirectDraw.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="dev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.GetEnumerator">
      <summary>Gets an enumerator for this collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.SurfacesCollection.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfacesCollection.Count">
      <summary>Gets the number of elements.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.SurfacesCollection.Current">
      <summary>Gets the current element in the collection.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.TestFinishedException">
      <summary>When thrown by StartModeTest method, this value means that no test could be initiated because all the resolutions chosen for testing already have refresh rate information in the registry.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TestFinishedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TestFinishedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TestFinishedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TestFinishedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.TooBigHeightException">
      <summary>The height requested by DirectDraw is too large.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigHeightException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigHeightException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigHeightException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigHeightException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.TooBigSizeException">
      <summary>The size requested by DirectDraw is too large. However, the individual height and width are valid sizes.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigSizeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigSizeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigSizeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigSizeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.TooBigWidthException">
      <summary>The width requested by DirectDraw is too large.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigWidthException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigWidthException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigWidthException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.TooBigWidthException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.UnsupportedException">
      <summary>The operation is not supported.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.UnsupportedFormatException">
      <summary>The pixel format requested is not supported by DirectDraw.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedFormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedFormatException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.UnsupportedMaskException">
      <summary>The bitmask in the pixel format requested is not supported by DirectDraw.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedMaskException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedMaskException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedMaskException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedMaskException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.UnsupportedModeException">
      <summary>The display is currently in an unsupported mode.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedModeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedModeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.UnsupportedModeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.VerticalBlankInProgressException">
      <summary>A vertical blank is in progress.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VerticalBlankInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VerticalBlankInProgressException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VerticalBlankInProgressException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VerticalBlankInProgressException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.VideoNotActiveException">
      <summary>The video port is not active.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VideoNotActiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VideoNotActiveException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VideoNotActiveException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.VideoNotActiveException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.WasStillDrawingException">
      <summary>The previous blit operation that is transferring information to or from this surface is incomplete.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WasStillDrawingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WasStillDrawingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WasStillDrawingException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WasStillDrawingException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.WindowAlreadySetException">
      <summary>The DirectDraw cooperative-level window has already been set. It cannot be reset while the process has surfaces or palettes created.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowAlreadySetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowAlreadySetException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowAlreadySetException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowAlreadySetException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.WindowSubclassedException">
      <summary>DirectDraw is prevented from restoring state because the DirectDraw cooperative-level window handle has been subclassed.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowSubclassedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowSubclassedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowSubclassedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WindowSubclassedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.WrongModeException">
      <summary>This surface cannot be restored because it was created in a different mode.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WrongModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WrongModeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WrongModeException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.WrongModeException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.XAlignException">
      <summary>The provided rectangle was not horizontally aligned on a required boundary.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.XAlignException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.XAlignException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.XAlignException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.XAlignException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ColorKeyFlags">
      <summary>Determines which color key is requested.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.ColorKeyFlags.SourceOverlay">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.ColorKeyFlags.SourceDraw">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.ColorKeyFlags.DestinationOverlay">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.ColorKeyFlags.DestinationDraw">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.ColorKeyFlags.ColorSpace">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags">
      <summary>Determines the top-level behavior of the application.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.FullscreenExclusiveAllowModex">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.FullscreenExclusive">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.CreateDeviceWindow">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.SetDeviceWindow">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.SetFocusWindow">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.AllowModeX">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.Exclusive">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.Normal">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.NoWindowChanges">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.AllowReboot">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CooperativeLevelFlags.Fullscreen">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.CreateFlags">
      <summary>Creation flags.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CreateFlags.Default">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CreateFlags.EmulationOnly">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.CreateFlags.HardwareOnly">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DrawFastFlags">
      <summary>Type of transfer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFastFlags.DoNotWait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFastFlags.Wait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFastFlags.DestinationColorKey">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFastFlags.SourceColorKey">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFastFlags.NoColorKey">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DrawFlags">
      <summary>A combination of flags that determine the valid members of the associated DrawEffects structure, specify color-key information, or request special behavior from the method.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.DoNotWait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.DepthFill">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.Wait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.RotationAngle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.RasterOperation">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.KeySourceOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.KeySource">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.KeyDestinationOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.KeyDestination">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.RasterOperations">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.Effects">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.ColorFix">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.Async">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaSourceSurfaceOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaSourceNegative">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaSourceConstOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaSource">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaEdgeBlend">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaDestinationSurfaceOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaDestinationNegative">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaDestinationConstOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.DrawFlags.AlphaDestination">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.FlipFlags">
      <summary>Flags specifying flip options.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.DoNotWait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Stereo">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Interval4">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Interval3">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Interval2">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.NoVSync">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Odd">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Even">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FlipFlags.Wait">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.FourCc">
      <summary>FourCc codes</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FourCc.Dxt5">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FourCc.Dxt4">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FourCc.Dxt3">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FourCc.Dxt2">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.FourCc.Dxt1">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GetDeviceFlags">
      <summary>GetDeviceFlags</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDeviceFlags.Default">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDeviceFlags.GetHostIdentifier">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GetDevicesFlags">
      <summary>GetDevicesFlags</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDevicesFlags.All">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDevicesFlags.NonDisplayDevices">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDevicesFlags.DetachedSecondaryDevice">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDevicesFlags.AttachedSecondaryDevice">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GetDisplayModeFlags">
      <summary>Getting displaymode flags, can be used to enumerate Standard VGA Modes, or RefreshRates.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDisplayModeFlags.StandardVgaModes">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetDisplayModeFlags.RefreshRates">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GetSurfacesFlags">
      <summary>The search type flag determines how the method searches for matching surfaces; The matching flag determines whether the method enumerates all surfaces, only those that match, or only those that do not match the description.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetSurfacesFlags.AllMatched">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetSurfacesFlags.DoesExist">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetSurfacesFlags.CanBeCreated">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetSurfacesFlags.NoMatch">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetSurfacesFlags.All">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.GetSurfacesFlags.Match">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.LockFlags">
      <summary>Flags describing locking.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.LockFlags.DoNotWait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.LockFlags.NoSystemLock">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.LockFlags.WriteOnly">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.LockFlags.ReadOnly">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.LockFlags.Wait">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.LockFlags.SurfaceMemoryPointer">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayEffectsFlags">
      <summary>Flags for overlay effects.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayEffectsFlags.Deinterlace">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayEffectsFlags.MirrorUpDown">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayEffectsFlags.MirrorLeftRight">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayEffectsFlags.ArithmeticStretchY">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayFlags">
      <summary>Overlay flags.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.DegradeArgbScaling">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.ArgbScaleFactors">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.BobHardware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.Interleaved">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.OverrideBobWeave">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.Bob">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AutoFlip">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.Effects">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.RefreshAll">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.RefreshDirtyRectangles">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AddDirtyRectangle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.Show">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.KeySourceOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.KeySource">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.KeyDestinationOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.KeyDestination">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.Hide">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaSurfaceOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaSourceNegative">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaSourceConstOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaSource">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaEdgeBlend">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaDestinationSurfaceOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaDestinationNegative">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaDestinationOverride">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayFlags.AlphaDestination">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayZFlags">
      <summary>Overlay flags.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZFlags.InsertInBackOf">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZFlags.InsertInFrontOf">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZFlags.MoveBackward">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZFlags.MoveForward">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZFlags.SendToBack">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZFlags.SendToFront">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayZOrdersFlags">
      <summary>Overlay flags.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZOrdersFlags.FrontToBack">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.OverlayZOrdersFlags.BackToFront">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.StartModeTestFlags">
      <summary>Flags for the StartModeTest call.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.StartModeTestFlags.IsTestRequired">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.StereoViewCapsFlags">
      <summary>Flags for Stereo View caps...</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.StereoViewCapsFlags.StereoSequential">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.WaitVbFlags">
      <summary>Determines how long to wait for the vertical blank.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.WaitVbFlags.BlockEnd">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.WaitVbFlags.BlockBeginEvent">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectDraw.WaitVbFlags.BlockBegin">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.Caps">
      <summary>Represents the capabilities of the hardware exposed through the DirectDraw object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Caps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.Caps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignBoundaryDestination">
      <summary>Destination-rectangle alignment for an overlay surface, in pixels.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignBoundaryDestinationCaps">
      <summary>DirectDraw supports only those overlay destination rectangles with the x-axis aligned to the AlignBoundaryDest boundaries of the surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignBoundarySource">
      <summary>Source-rectangle alignment for an overlay surface, in pixels.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignBoundarySourceCaps">
      <summary>DirectDraw supports only those overlay source rectangles with the x-axis aligned to the AlignBoundarySource boundaries of the surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignSizeDestination">
      <summary>Destination-rectangle size alignment for an overlay surface, in pixels. Overlay destination rectangles must have a pixel width that is a multiple of this value.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignSizeDestinationCaps">
      <summary>DirectDraw supports only those overlay destination rectangles whose x-axis sizes, in pixels, are AlignSizeDest multiples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignSizeSource">
      <summary>Source-rectangle size alignment for an overlay surface, in pixels. Overlay source rectangles must have a pixel width that is a multiple of this value.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignSizeSourceCaps">
      <summary>DirectDraw supports only those overlay source rectangles whose x-axis sizes, in pixels, are AlignSizeSource multiples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignStride">
      <summary>Stride alignment.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlignStrideAlign">
      <summary>Stride alignment.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.Alpha">
      <summary>The display hardware supports alpha-only surfaces.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlphaDrawConstBitDepths">
      <summary>Indicate 2, 4, or 8 bits per pixel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlphaDrawPixelBitDepths">
      <summary>Indicate 1, 2, 4, or 8 bits per pixel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlphaDrawSurfaceBitDepths">
      <summary>Indicate 1, 2, 4, or 8 bits per pixel.)</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlphaOverlayConstBitDepths">
      <summary>Indicate 1, 2, 4, or 8 bits per pixel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlphaOverlayPixelBitDepths">
      <summary>Indicate 1, 2, 4, or 8 bits per pixel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AlphaOverlaySurfaceBitDepths">
      <summary>Indicate 1, 2, 4, or 8 bits per pixel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.AutoFlipOverlay">
      <summary>The overlay can be automatically flipped to the next surface in the flipping chain each time that a video port VSYNC occurs, allowing the video port and the overlay to double-buffer the video without CPU overhead. This option is only valid when the surface is receiving data from a video port. If the video port data is noninterlaced or noninterleaved, it flips on every VSYNC. If the data is being interleaved in memory, it flips on every other VSYNC.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.BankSwitched">
      <summary>The display hardware is bank-switched and is potentially very slow at random access to display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CanClip">
      <summary>Display hardware is capable of clipping with blitting.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CanClipStretched">
      <summary>Display hardware is capable of clipping while stretch blitting.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CanDrawSystemMemory">
      <summary>Display hardware is capable of blitting to or from system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CanFlipOddEven">
      <summary>The driver is capable of performing odd and even flip operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CertifiedHardware">
      <summary>Display hardware is certified.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ColorControlOverlay">
      <summary>The overlay surface contains color controls (such as brightness and sharpness)</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ColorControlPrimary">
      <summary>The primary surface contains color controls (for instance, gamma)</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ColorFill">
      <summary>Display hardware is capable of color filling with a blitter.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ColorKeyCapable">
      <summary>Supports some form of color key in either overlay or blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ColorKeyCaps">
      <summary>Color Key cababilities</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ColorKeyHardwareAssisted">
      <summary>The color key is partially hardware-assisted. This means that other resources (CPU or video memory) might be used. If this bit is not set, full hardware support is in place.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CopyFourCc">
      <summary>The driver supports blitting any FOURCC surface to another surface of the same FOURCC.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CurrentVideoPorts">
      <summary>Current number of live video ports.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.CurrentVisibleOverlays">
      <summary>Current number of visible overlays or overlay sprites.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.Draw">
      <summary>Display hardware is capable of blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.DrawFourCc">
      <summary>Display hardware is capable of color-space conversions during blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.DrawQueue">
      <summary>Display hardware is capable of asynchronous blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.DrawStretch">
      <summary>Display hardware is capable of stretching during blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.FlipInterval">
      <summary>The driver responds to the FileInterval flags</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.FlipNoVSync">
      <summary>The driver responds to the NoVsync flag.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.FXAlphaCaps">
      <summary>Driver-specific stretching and effects capabilities.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.FXCaps">
      <summary>Driver-specific stretching and effects capabilities.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.GammaCalibration">
      <summary>The system has a calibrator installed that can automatically adjust the gamma ramp so that the result is identical on all systems that have a calibrator.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.GdiShared">
      <summary>Display hardware is shared with GDI</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.MaxHardwareCodecStretch">
      <summary>Obsolete; do not use.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.MaxOverlayStretch">
      <summary>maximum overlay stretch factors, multiplied by 1000. For example, 1.3 = 1300.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.MaxVideoPorts">
      <summary>Maximum video ports.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.MaxVisibleOverlays">
      <summary>Maximum number of visible overlays</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.MinHardwareCodecStretch">
      <summary>Obsolete; do not use.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.MinOverlayStretch">
      <summary>Minimum overlay stretch factors, multiplied by 1000. For example, 1.3 = 1300.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NlVbCaps">
      <summary>Driver-specific capabilities for blits from nonlocal to local video memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NlVbCKeyCaps">
      <summary>Driver color-key capabilities for blits form nonlocal to local video memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NlVbEffectsCaps">
      <summary>Driver FX capabilities for blits from nonlocal to local video memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NlVbExtendedCaps">
      <summary>Driver extended capabilities for blits from nonlocal to local video memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NlVbRasterOperations">
      <summary>Raster operations supported for blits from nonlocal to local video memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NoHardware">
      <summary>There is no hardware support.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NonLocalVideoMemory">
      <summary>The display driver supports surfaces in nonlocal video memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NoPageLockRequired">
      <summary>DMA blit operations are supported on system-memory surfaces that are not page-locked.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.NumberFourCcCodes">
      <summary>Number of FourCC codes.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.Overlay">
      <summary>Display hardware supports overlays.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.OverlayCannotClip">
      <summary>Display hardware supports overlays but cannot clip them.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.OverlayFourCc">
      <summary>Overlay hardware is capable of color-space conversions during overlay operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.OverlayHardwareDisplaysInterlacedVideo">
      <summary>The overlay hardware can display each field of an interlaced video stream individually.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.OverlayHardwareDisplaysInterleavedVideo">
      <summary>The overlay hardware can display each field of an interlaced video stream individually while it is interleaved in memory without causing any artifacts that might normally occur without special hardware support. This option is only valid when the surface is receiving data from a video port and the video is zoomed at least twice in the vertical direction.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.OverlayHardwareDisplaysNonInterleavedVideo">
      <summary>The overlay hardware can display each field of an interlaced video stream individually while it is not interleaved in memory without causing any artifacts that might normally occur without special hardware support. This option is only valid when the surface is receiving data from a video port and the video is zoomed at least twice in the vertical direction.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.OverlayStretch">
      <summary>Overlay hardware is capable of stretching.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.Palette">
      <summary>DirectDraw is capable of creating and supporting DirectDrawPalette objects for surfaces other than the primary surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.PaletteCaps">
      <summary>Palette capabilities.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.PaletteVerticalSync">
      <summary>DirectDraw is capable of updating a palette synchronized with the vertical refresh.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.PrimaryGamma">
      <summary>Supports dynamic gamma ramps for the primary surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.RasterOperations">
      <summary>Raster operations supported.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.ReadScanLine">
      <summary>Display hardware is capable of returning the current scan line.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SsbCaps">
      <summary>Driver-specific capabilities for blits from system memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SsbCKeyCaps">
      <summary>Driver color-key capabilities for blits from system memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SsbEffectsCaps">
      <summary>Driver FX capabilities for blits from system memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SsbRasterOperations">
      <summary>Raster operations supported for blits from system memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.Stereo">
      <summary>Turns on the bit to support stereo mode. The driver can do stereo in at least one mode other than the current mode.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.StereoVisionSequential">
      <summary>The driver can do stereo in at least one mode other than the current mode.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SurfaceCaps">
      <summary>General surface capabilities.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SvbCaps">
      <summary>Driver-specific capabilities for blits from system memory to display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SvbcKeyCaps">
      <summary>Driver color-key capabilities for blits from system memory to display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SvbEffectsCaps">
      <summary>Driver FX capabilities for blits from system memory to display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SvbExtendedCaps">
      <summary>Driver extended capabilities for blits from system memory to display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SvbRasterOperations">
      <summary>Raster operations supported for blits from system memory to display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.SvCaps">
      <summary>Stereo-vision capabilities</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VerticalBlankInterrupt">
      <summary>Display hardware is capable of generating a vertical-blank interrupt.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VideoMemoryFree">
      <summary>Free display memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VideoMemoryTotal">
      <summary>Total amount of display memory on the device, in bytes, minus memory reserved for the primary surface and any private data structures reserved by the driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VideoPort">
      <summary>Display hardware supports live video.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VsbCaps">
      <summary>Driver-specific capabilities for blits from display memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VsbCKeyCaps">
      <summary>Driver color-key capabilities for blits from display memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VsbEffectsCaps">
      <summary>Driver FX capabilities for blits from display memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.VsbRasterOperations">
      <summary>Raster operations supported for blits from display memory to system memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.Caps.WideSurfaces">
      <summary>The display surface supports surfaces wider than the primary surface.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ColorControlObject">
      <summary>Defines the color controls associated with an overlay surface, or a primary surface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControlObject.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorControlObject.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.Brightness">
      <summary>Luminance intensity, in IRE units times 100. The valid range is from 0 through 10,000. The default is 750, which translates to 7.5 IRE.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.ColorEnable">
      <summary>Flag indicating whether color is used.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.Contrast">
      <summary>Relative difference between higher and lower intensity luminance values in IRE units times 100. The valid range is from 0 through 20,000. The default value is 10,000 (100 IRE). Higher values of contrast cause darker luminance values to tend toward black and lighter luminance values to tend toward white. Lower values of contrast cause all luminance values to move toward the middle of the scale.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.Gamma">
      <summary>Controls the amount of gamma correction applied to the luminance values. The valid range is from 1 through 500 gamma units, with a default of 1.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.Hue">
      <summary>Phase relationship of the chrominance components. Hue is specified in degrees, and the valid range is from -180 through 180, with a default of 0.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsBrightnessValid">
      <summary>The Brightness member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsColorEnableValid">
      <summary>The ColorEnable member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsContrastValid">
      <summary>The Contrast member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsGammaValid">
      <summary>The Gamma member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsHueValid">
      <summary>The Hue member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsSaturationValid">
      <summary>The Saturation member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.IsSharpnessValid">
      <summary>The Sharpness member contains valid data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.Saturation">
      <summary>Color intensity, in IRE units times 100. The valid range is from 0 through 20,000. The default value is 10,000, which translates to 100 IRE.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorControlObject.Sharpness">
      <summary>Sharpness, in arbitrary units. The valid range is from 0 through 10, with a default of 5.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ColorKey">
      <summary>Describes a source color key, destination color key, or color space.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKey.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKey.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKey.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKey.op_Equality(Microsoft.DirectX.DirectDraw.ColorKey,Microsoft.DirectX.DirectDraw.ColorKey)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKey.op_Inequality(Microsoft.DirectX.DirectDraw.ColorKey,Microsoft.DirectX.DirectDraw.ColorKey)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKey.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKey.ColorSpaceHighValue">
      <summary>High value of the color range that is to be used as the color key.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKey.ColorSpaceLowValue">
      <summary>Low value of the color range that is to be used as the color key.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.ColorKeyCaps">
      <summary>Color Key capabilities</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.ColorKeyCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationDraw">
      <summary>Supports transparent blitting with a color key that identifies the replaceable bits of the destination surface for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationDrawColorSpace">
      <summary>Supports transparent blitting with a color space that identifies the replaceable bits of the destination surface for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationDrawColorSpaceYuv">
      <summary>Supports transparent blitting with a color key that identifies the replaceable bits of the destination surface for YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationDrawYuv">
      <summary>Supports transparent blitting with a color key that identifies the replaceable bits of the destination surface for YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationOverlay">
      <summary>Supports overlaying with color keying of the replaceable bits of the destination surface to be overlaid for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationOverlayColorSpace">
      <summary>Supports a color space as the color key for the destination of RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationOverlayColorSpaceYuv">
      <summary>Supports a color space as the color key for the destination of YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationOverlayOneActive">
      <summary>Supports only one active destination color key value for visible overlay surfaces</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.DestinationOverlayYuv">
      <summary>Supports overlaying, using color keying of the replaceable bits of the destination surface to be overlaid for YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.NoCostOverlay">
      <summary>Indicates that there are no bandwidth trade-offs for using the color key with an overlay.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceDraw">
      <summary>Supports transparent blitting, using the color key for the source with this surface for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceDrawColorSpace">
      <summary>Supports transparent blitting, using a color space for the source with this surface for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceDrawColorSpaceYuv">
      <summary>Supports transparent blitting, using a color space for the source with this surface for YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceDrawYuv">
      <summary>Supports transparent blitting, using the color key for the source with this surface for YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceOverlay">
      <summary>Supports overlaying, using the color key for the source with this overlay surface for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceOverlayColorSpace">
      <summary>Supports overlaying, using a color space as the source color key for the overlay surface for RGB colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceOverlayColorSpaceYuv">
      <summary>Supports overlaying, using a color space as the source color key for the overlay surface for YUV colors.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceOverlayOneActive">
      <summary>Supports only one active source color key value for visible overlay surfaces.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.ColorKeyCaps.SourceOverlayYuv">
      <summary>Supports overlaying, using the color key for the source with this overlay surface for YUV colors.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DeviceIdentifier">
      <summary>Information about a device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceIdentifier.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceIdentifier.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.Description">
      <summary>Description of the driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.DeviceGuid">
      <summary>Unique identifier for the driver/chipset pair. Use this value if you want to track changes to the driver or chipset to reprofile the graphics subsystem. It can also be used to identify particular problematic drivers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.DeviceId">
      <summary>Identifier of the type of chipset. Can be 0 if unknown.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.Driver">
      <summary>Name of the driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.DriverVersion">
      <summary>Version of the driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.Revision">
      <summary>Identifier of the revision level of the chipset. Can be 0 if unknown.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.SubSystemId">
      <summary>Identifier of the subsystem. Typically, this means the particular board. Can be 0 if unknown.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.VendorId">
      <summary>Identifier of the manufacturer. Can be 0 if unknown.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceIdentifier.WhqlLevel">
      <summary>The Windows Hardware Quality Lab (WHQL) certification level for the device/driver pair.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DeviceInformation">
      <summary>Information about a device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceInformation.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DeviceInformation.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceInformation.Description">
      <summary>Description of the driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceInformation.Driver">
      <summary>Name of the driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DeviceInformation.Name">
      <summary>Name of the driver.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.DrawEffects">
      <summary>Raster operations (ROPs), effects, and override information.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DrawEffects.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.DrawEffects.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.AlphaDestinationConstant">
      <summary>Constant used as the alpha channel destination.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.AlphaDestinationConstantBitDepth">
      <summary>Bit depth of the destination alpha constant.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.AlphaEdgeBlend">
      <summary>Alpha constant used for edge blending.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.AlphaEdgeBlendBitDepth">
      <summary>Bit depth of the constant for an alpha edge blend.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.AlphaSourceConstant">
      <summary>Constant used as the alpha channel source.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.AlphaSourceConstantBitDepth">
      <summary>Bit depth of the source alpha constant.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.DestinationColorKey">
      <summary>Destination color key override.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.DrawRasterOperations">
      <summary>DirectDraw raster operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationArithmeticStretchy">
      <summary>Uses arithmetic stretching along the y-axis for this blit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationMirrorLeftRight">
      <summary>Turns the surface on its y-axis. This blit mirrors the surface from left to right.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationMirrorUpDown">
      <summary>Turns the surface on its x-axis. This blit mirrors the surface from top to bottom.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationNoTearing">
      <summary>Schedules this blit to avoid tearing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationRotate180">
      <summary>Rotates the surface 180 degrees clockwise during this blit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationRotate270">
      <summary>Rotates the surface 270 degrees clockwise during this blit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.EffectOperationRotate90">
      <summary>Rotates the surface 90 degrees clockwise during this blit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.FillColor">
      <summary>Color used to fill a surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.FillDepth">
      <summary>Depth value for the z-buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.FillPixel">
      <summary>Pixel value for RGBA or RGBZ fills. Applications that use RGBZ fills should use this member.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.FXOperations">
      <summary>Type of FX operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.RasterOperations">
      <summary>Win32 raster operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.RotationAngle">
      <summary>Rotation angle for the blit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.DrawEffects.SourceColorKey">
      <summary>Source color key override.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.FXAlphaCaps">
      <summary>Driver-specific alpha capabilities</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.FXAlphaCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.DrawAlphaEdgeBlend">
      <summary>Supports alpha blending around the edge of a source color-keyed surface. Used for draw operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.DrawAlphaPixels">
      <summary>Supports alpha information in pixel format. The bit depth of alpha information in the pixel format can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.DrawAlphaPixelsNegative">
      <summary>Supports alpha information in pixel format. The bit depth of alpha information in the pixel format can be 1, 2, 4, or 8. The alpha value becomes more transparent as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be used only if Alpha is set. Used for draw operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.DrawAlphaSurfaces">
      <summary>Supports alpha-only surfaces. The bit depth of an alpha-only surface can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.DrawAlphaSurfacesNegative">
      <summary>Indicates that the alpha channel becomes more transparent as the alpha value increases. The depth of the alpha channel-data can be 1, 2, 4, or 8. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be set only if Alpha has been set. Used for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.OverlayAlphaEdgeBlend">
      <summary>Supports alpha blending around the edge of a source color-keyed surface. Used for overlays.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.OverlayAlphaPixels">
      <summary>Supports alpha information in pixel format. The bit depth of alpha information in pixel format can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for overlays.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.OverlayAlphaPixelsNegative">
      <summary>Supports alpha information in pixel format. The bit depth of alpha information in pixel format can be 1, 2, 4, or 8. The alpha value becomes more transparent as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be used only if Alpha has been set. Used for overlays.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.OverlayAlphaSurfaces">
      <summary>Supports alpha-only surfaces. The bit depth of an alpha-only surface can be 1, 2, 4, or 8. The alpha value becomes more opaque as the alpha value increases. Regardless of the depth of the alpha information, 0 is always the fully transparent value. Used for overlays.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXAlphaCaps.OverlayAlphaSurfacesNegative">
      <summary>Indicates that the alpha channel becomes more transparent as the alpha value increases. The depth of the alpha-channel data can be 1, 2, 4, or 8. Regardless of the depth of the alpha information, 0 is always the fully opaque value. This flag can be used only if Alpha has been set. Used for overlays.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.FXCaps">
      <summary>Driver-specific stretching and effects capabilities.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.FXCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawAlpha">
      <summary>Supports alpha-blended blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawArithmeticStretchY">
      <summary>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink surfaces during a blit operation. Occurs along the y-axis (vertically).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawArithmeticStretchYn">
      <summary>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink surfaces during a blit operation. Occurs along the y-axis (vertically), and works only for integer stretching (×1, ×2, and so on).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawFilter">
      <summary>Driver can do surface-reconstruction filtering for warped blits.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawMirrorLeftRight">
      <summary>Supports mirroring left to right in a blit operation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawMirrorUpDown">
      <summary>Supports mirroring top to bottom in a blit operation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawRotation">
      <summary>Supports arbitrary rotation in a blit operation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawRotation90Degrees">
      <summary>Supports 90-degree rotations in a blit operation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawShrinkX">
      <summary>Supports arbitrary shrinking of a surface along the x-axis (horizontally). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawShrinkXn">
      <summary>Supports integer shrinking (×1, ×2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawShrinkY">
      <summary>Supports arbitrary shrinking of a surface along the y-axis (vertically). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawShrinkYn">
      <summary>Supports integer shrinking (×1, ×2, and so on) of a surface along the y-axis (vertically). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawStretchX">
      <summary>Supports arbitrary stretching of a surface along the x-axis (horizontally). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawStretchXn">
      <summary>Supports integer stretching (×1, ×2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawStretchY">
      <summary>Supports arbitrary stretching of a surface along the y-axis (vertically). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.DrawStretchYn">
      <summary>Supports integer stretching (×1, ×2, and so on) of a surface along the y-axis (vertically). This flag is valid only for blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayAlpha">
      <summary>Supports geometric transformations (or warps) for blitted sprites. Transformations are not currently supported for explicit blit operations.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayArithmeticStretchY">
      <summary>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink overlay surfaces. Occurs along the y-axis (vertically).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayArithmeticStretchYn">
      <summary>Uses arithmetic operations, rather than pixel-doubling techniques, to stretch and shrink overlay surfaces. Occurs along the y-axis (vertically), and works only for integer stretching (×1, ×2, and so on).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayFilter">
      <summary>Supports surface-reconstruction filtering for warped overlay sprites.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayMirrorLeftRight">
      <summary>Supports mirroring of overlays across the vertical axis.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayMirrorUpDown">
      <summary>Supports mirroring of overlays across the horizontal axis.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayShrinkX">
      <summary>Supports arbitrary shrinking of a surface along the x-axis (horizontally). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayShrinkXn">
      <summary>Supports integer shrinking (×1, ×2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayShrinkY">
      <summary>Supports arbitrary shrinking of a surface along the y-axis (vertically). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayShrinkYn">
      <summary>Supports integer shrinking (×1, ×2, and so on) of a surface along the y-axis (vertically). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayStretchX">
      <summary>Supports arbitrary stretching of a surface along the x-axis (horizontally). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that stretching is available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayStretchXn">
      <summary>Supports integer shrinking (×1, ×2, and so on) of a surface along the x-axis (horizontally). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayStretchY">
      <summary>Supports arbitrary shrinking of a surface along the y-axis (vertically). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.FXCaps.OverlayStretchYn">
      <summary>Supports integer shrinking (×1, ×2, and so on) of a surface along the y-axis (vertically). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that shrinking is available.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GammaRamps">
      <summary>Supports arbitrary stretching of a surface along the x-axis (horizontally). This flag is valid only for overlay surfaces. This flag indicates only the capabilities of a surface; it does not indicate that stretching is available.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.GetBlue">
      <summary>Get the blue gamma ramps.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.GetGreen">
      <summary>Get the green gamma ramps.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.GetRed">
      <summary>Get the red gamma ramps.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.SetBlue(System.Int16[])">
      <summary>Set the blue gamma ramps.</summary>
      <param name="value" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.SetGreen(System.Int16[])">
      <summary>Set the green gamma ramps.</summary>
      <param name="value" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GammaRamps.SetRed(System.Int16[])">
      <summary>Set the red gamma ramps.</summary>
      <param name="value" />
      <returns />
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.GetCapsStruct">
      <summary>Hardware and Hardware Emulation Layer (HEL) capabilities</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GetCapsStruct.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.GetCapsStruct.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.GetCapsStruct.HardwareCaps">
      <summary>Hardware capabilities</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.GetCapsStruct.HardwareEmulationCaps">
      <summary>Hardware emulation layer (HEL) capabilities</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.OverlayEffects">
      <summary>Override information to the UpdateOverlay method.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayEffects.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.OverlayEffects.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.AlphaDestinationConstant">
      <summary>Constant to use as the alpha channel for a destination.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.AlphaDestinationConstantBitDepth">
      <summary>Bit depth used to specify the alpha constant for a destination.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.AlphaEdgeBlend">
      <summary>Constant to use as the alpha for an edge blend.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.AlphaEdgeBlendBitDepth">
      <summary>Bit depth used to specify the constant for an alpha edge blend.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.AlphaSourceConstant">
      <summary>Constant to use as the alpha channel for a source.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.AlphaSourceConstantBitDepth">
      <summary>Bit depth used to specify the alpha constant for a source.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.ArithmeticStretchY">
      <summary>If stretching, use arithmetic stretching along the y-axis for this overlay.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.DestinationColorKey">
      <summary>Destination color key override.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.Effects">
      <summary>Overlay FX flags.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.MirrorLeftRight">
      <summary>Mirror the overlay around the vertical axis.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.MirrorUpDown">
      <summary>Mirror the overlay around the horizontal axis.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.OverlayEffects.SourceColorKey">
      <summary>Source color key override.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.PaletteCaps">
      <summary>Palette capabilities</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.Allow256">
      <summary>Supports palettes that can have all 256 entries defined.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.Alpha">
      <summary>Supports palettes that include an alpha component.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.EightBit">
      <summary>Supports palettes that contain 8-bit color entries (256 colors).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.EightBitEntries">
      <summary>Specifies an index to an 8-bit color index.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.FourBit">
      <summary>Supports palettes that contain 4-bit color entries (16 colors).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.OneBit">
      <summary>Supports palettes that contain 1-bit color entries (two colors).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.PrimarySurface">
      <summary>The palette is attached to the primary surface. Changing the palette has an immediate effect on the display unless the VSync capability is specified and supported.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.PrimarySurfaceLeft">
      <summary>The palette is attached to the primary surface on the left. Changing the palette has an immediate effect on the display unless the VSync capability is specified and supported</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.TwoBit">
      <summary>Supports palettes that contain 2-bit color entries (four colors).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteCaps.VerticalSync">
      <summary>The palette can be modified synchronously with the monitor's refresh rate.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.PaletteEntry">
      <summary>Specifies the color and usage of an entry in a logical color palette.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteEntry.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PaletteEntry.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteEntry.Blue">
      <summary>Specifies a blue intensity value for the palette entry.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteEntry.Flags">
      <summary>Specifies how the palette entry is to be used.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteEntry.Green">
      <summary>Specifies a green intensity value for the palette entry.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PaletteEntry.Red">
      <summary>Specifies a red intensity value for the palette entry.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectDraw.PixelFormat">
      <summary>Describes the pixel format of a DirectDrawSurface.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PixelFormat.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectDraw.PixelFormat.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.Alpha">
      <summary>The pixel format describes an alpha-only surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.AlphaBitDepth">
      <summary>Alpha channel bit depth (1, 2, 4, or 8) for an alpha-only surface.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.AlphaPixels">
      <summary>The surface has alpha channel information in the pixel format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.AlphaPremultiplied">
      <summary>The surface uses the premultiplied alpha format. That is, the color components in each pixel are premultiplied by the alpha component.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.BBitMask">
      <summary>Mask for blue bits.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.Compressed">
      <summary>The surface accepts pixel data in the specified format and compress it during the write operation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.DrawMsTypes">
      <summary>Types of multisample draws.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.FlipMsTypes">
      <summary>Types of multisample flips.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.FourCC">
      <summary>FourCC code.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.FourCcIsValid">
      <summary>The FourCC member is valid and contains a FOURCC code describing a non-RGB pixel format.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.GBitMask">
      <summary>Mask for green bits.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.PaletteIndexed">
      <summary>The surface is 1-, 2-, 4-, or 8-bit color-indexed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.PaletteIndexedTo8">
      <summary>The surface is 1-, 2-, or 4-bit color-indexed to an 8-bit palette.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.RBitMask">
      <summary>Mask for red bits.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.Rgb">
      <summary>The RGB data in the pixel format structure is valid.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.RgbAlphaBitMask">
      <summary>Masks for the alpha channel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.RgbBitCount">
      <summary>RGB bits per pixel (4, 8, 16, 24, or 32).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.RgbToYuv">
      <summary>The surface accepts RGB data and translates it during the write operation to YUV data. The format of the data to be written is contained in the pixel format structure. The Rgb flag is set.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.YBitMask">
      <summary>Mask for Y bits.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.Yuv">
      <summary>The YUV data in the pixel format structure is valid.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.YuvAlphaBitMask">
      <summary>Masks for the alpha channel.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectDraw.PixelFormat.YuvBitCount">
      <summary>YUV bits per pixel (4, 8, 16, 24, or 32).</summary>
    </member>
  </members>
</doc>