<doc>
  <assembly>
    <name>Microsoft.DirectX.DirectSound</name>
  </assembly>
  <members>
    <member name="T:Microsoft.DirectX.DirectSound.AccessDeniedException">
      <summary>The request failed because access was denied.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AccessDeniedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.AllocatedException">
      <summary>The request failed because resources, such as a priority level, were already in use by another caller.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.AllocatedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BadFormatException">
      <summary>The specified wave format is not supported.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadFormatException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BadSendBufferGuidException">
      <summary>The Guid specified in an audiopath file does not match a valid mix-in buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BadSendBufferGuidException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Buffer">
      <summary>The Buffer object is used to manage sound buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Buffer.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Clone(Microsoft.DirectX.DirectSound.Device)">
      <summary>Duplicates the object.</summary>
      <param name="parent" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="length" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.String,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="fileName" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="length" />
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.String,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="fileName" />
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.#ctor(Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.GetCurrentPosition(System.Int32@,System.Int32@)">
      <summary>The GetCurrentPosition method retrieves the position of the play and write cursors in the sound buffer.</summary>
      <param name="currentPlayPosition" />
      <param name="currentWritePosition" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.op_Equality(Microsoft.DirectX.DirectSound.Buffer,Microsoft.DirectX.DirectSound.Buffer)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.op_Inequality(Microsoft.DirectX.DirectSound.Buffer,Microsoft.DirectX.DirectSound.Buffer)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Play(System.Int32,Microsoft.DirectX.DirectSound.BufferPlayFlags)">
      <summary>The Play method causes the sound buffer to play, starting at the play cursor.</summary>
      <param name="priority" />
      <param name="flags" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Read(System.Int32,System.Type,Microsoft.DirectX.DirectSound.LockFlag,System.Int32[])">
      <summary>Reads the current data in the buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="returnedDataType" />
      <param name="flag" />
      <param name="ranks" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Read(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Reads the current data in the buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="data" />
      <param name="numberBytesToRead" />
      <param name="flag" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Restore">
      <summary>The Restore method restores the memory allocation for a lost sound buffer.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.SetCurrentPosition(System.Int32)">
      <summary>The SetCurrentPosition method sets the position of the play cursor, which is the point at which the next byte of data is read from the buffer.</summary>
      <param name="newPosition" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Stop">
      <summary>The Stop method causes the sound buffer to stop playing.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Write(System.Int32,System.Array,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Writes data to the buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="data" />
      <param name="flag" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer.Write(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Writes data to the buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="data" />
      <param name="numberBytesToWrite" />
      <param name="flag" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Caps">
      <summary>The GetCaps method retrieves the capabilities of the buffer object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Format">
      <summary>Retrieves or sets a description of the sound data format in the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Frequency">
      <summary>The frequency, in samples per second, at which the buffer is playing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.NotVirtualized">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Pan">
      <summary>The relative volume of the left and right audio channels.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.PlayPosition">
      <summary>Retrieves the position of the play cursor.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Status">
      <summary>Retrieves the status of the sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.Volume">
      <summary>The attenuation of the sound.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer.WritePosition">
      <summary>The position of the write cursor in the sound buffer.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Buffer3D">
      <summary>The Buffer3D object is used to retrieve and set parameters that describe the position, orientation, and environment of a sound buffer in 3-D space.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Buffer3D.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="buff" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="buff" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.#ctor(Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.op_Equality(Microsoft.DirectX.DirectSound.Buffer3D,Microsoft.DirectX.DirectSound.Buffer3D)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.op_Inequality(Microsoft.DirectX.DirectSound.Buffer3D,Microsoft.DirectX.DirectSound.Buffer3D)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3D.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.AllParameters">
      <summary>The 3-D properties of the sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.ConeAngles">
      <summary>The inside and outside angles of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.ConeOrientation">
      <summary>The orientation of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.ConeOutsideVolume">
      <summary>The volume of the sound outside the outside angle of the sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Deferred">
      <summary>Settings are not applied until the application calls the Listener3D.CommitDeferredSettings() if true.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.MaxDistance">
      <summary>The maximum distance, which is the distance from the listener beyond which sounds in this buffer are no longer attenuated.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.MinDistance">
      <summary>The minimum distance, which is the distance from the listener at which sounds in this buffer begin to be attenuated.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Mode">
      <summary>The operation mode for 3-D sound processing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Position">
      <summary>The position of the sound source.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3D.Velocity">
      <summary>The velocity of the sound source.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferDescription">
      <summary>The BufferDescription object describes the characteristics of a new buffer object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.#ctor(Microsoft.DirectX.DirectSound.WaveFormat)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="wfx" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferDescription.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.BufferBytes">
      <summary>Size of the new buffer, in bytes. This value must be 0 when creating a buffer with PrimaryBuffer set to true.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.CanGetCurrentPosition">
      <summary>Note that this flag affects only emulated sound cards. If a DirectSound driver is present, the play cursor is accurate for DirectSound in all versions of DirectX.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Control3D">
      <summary>The buffer has 3-D control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlEffects">
      <summary>The buffer supports effects processing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlFrequency">
      <summary>The buffer has frequency control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlPan">
      <summary>The buffer has pan control capability. Cannot be combined with Control3D.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlPositionNotify">
      <summary>The buffer has position notification capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.ControlVolume">
      <summary>The buffer has volume control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.DeferLocation">
      <summary>The buffer can be assigned to a hardware or software resource at play time. This flag must be set for buffers that use voice management.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Flags">
      <summary>Flags specifying the capabilities of the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Format">
      <summary>Structure specifying the waveform format for the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.GlobalFocus">
      <summary>The buffer is a global sound buffer. With this flag set, an application using DirectSound can continue to play its buffers if the user switches focus to another application, even if the new application uses DirectSound. The one exception is if you switch focus to a DirectSound application that uses the WritePrimary flag for its cooperative level. In this case, the global sounds from other applications will not be audible.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Guid3DAlgorithm">
      <summary>Unique identifier of the two-speaker virtualization algorithm to be used by DirectSound3D hardware emulation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.LocateInHardware">
      <summary>The buffer must use hardware mixing, If the device does not support hardware mixing or if the required hardware memory is not available, the method will fail.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.LocateInSoftware">
      <summary>The buffer must be in software memory and use software mixing, even if Static is specified and hardware resources are available.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.Mute3DAtMaximumDistance">
      <summary>The sound is reduced to silence at the maximum distance. The buffer will stop playing when the maximum distance is exceeded, so that processor time is not wasted. Applies only to software buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.PrimaryBuffer">
      <summary>The buffer is a primary buffer. If this value is not specified, a secondary sound buffer is created.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.StaticBuffer">
      <summary>The buffer is placed in on-board hardware memory, if available. No error occurs if such memory is not available. This flag has no effect on cards using the PCI bus. Cannot be combined with ControlEffects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferDescription.StickyFocus">
      <summary>The buffer has sticky focus. If the user switches to another application not using DirectSound, the application's normal buffers are muted, but sticky focus buffers are still audible.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferLostException">
      <summary>The buffer memory has been lost and must be restored.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferLostException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferTooSmallException">
      <summary>The buffer size is not great enough to enable effects processing.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferTooSmallException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Capture">
      <summary>The Capture object is used to create sound capture buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Capture.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.#ctor(System.Guid)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="guidDev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.op_Equality(Microsoft.DirectX.DirectSound.Capture,Microsoft.DirectX.DirectSound.Capture)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.op_Inequality(Microsoft.DirectX.DirectSound.Capture,Microsoft.DirectX.DirectSound.Capture)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Capture.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Capture.Caps">
      <summary>Retrieves the capabilities of the capture device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Capture.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect">
      <summary>The CaptureAcousticEchoCancellationEffect object is used to set and retrieve parameters on a capture buffer that supports acoustic echo cancellation. This object requires Microsoft® Windows® XP or later operating systems.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.op_Equality(Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect,Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.op_Inequality(Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect,Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.AllParameters">
      <summary>The acoustic echo cancellation parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureAcousticEchoCancellationEffect.Status">
      <summary>The status of the effect.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureBuffer">
      <summary>The CaptureBuffer object is used to manipulate sound capture buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CaptureBuffer.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Capture)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="device" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.#ctor(Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.Capture)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetCurrentPosition(System.Int32@,System.Int32@)">
      <summary>The GetCurrentPosition method retrieves the positions of the capture and read cursors in the buffer. The capture cursor is ahead of the read cursor. The data after the read position up to and including the capture position is not necessarily valid data.</summary>
      <param name="currentCapturePosition" />
      <param name="currentReadPosition" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetEffectsStatus(System.Int32)">
      <summary>Retrieves the status of capture effects.</summary>
      <param name="numEffects" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.GetObjectInPath(System.Guid,System.Int32,System.Guid)">
      <summary>The GetObjectInPath method retrieves an effect object associated with the buffer.</summary>
      <param name="guidObject" />
      <param name="index" />
      <param name="guidInterface" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.op_Equality(Microsoft.DirectX.DirectSound.CaptureBuffer,Microsoft.DirectX.DirectSound.CaptureBuffer)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.op_Inequality(Microsoft.DirectX.DirectSound.CaptureBuffer,Microsoft.DirectX.DirectSound.CaptureBuffer)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read(System.Int32,System.Type,Microsoft.DirectX.DirectSound.LockFlag,System.Int32[])">
      <summary>Reads data from the capture buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="returnedDataType" />
      <param name="flag" />
      <param name="ranks" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Read(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Reads data from the capture buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="data" />
      <param name="numberBytesToRead" />
      <param name="flag" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Start(System.Boolean)">
      <summary>The Start method begins capturing data into the buffer. If the buffer is already capturing, the method has no effect.</summary>
      <param name="looping" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Stop">
      <summary>The Stop method stops the buffer so that it is no longer capturing data. If the buffer is not capturing, the method has no effect.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Write(System.Int32,System.Array,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Write data to the capture buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="data" />
      <param name="flag" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBuffer.Write(System.Int32,System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.LockFlag)">
      <summary>Write data to the capture buffer.</summary>
      <param name="bufferStartingLocation" />
      <param name="data" />
      <param name="numberBytesToWrite" />
      <param name="flag" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Caps">
      <summary>Retrieves the capabilities of the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Capturing">
      <summary>true if the buffer is currently capturing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Format">
      <summary>The waveform format of the capture buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBuffer.Looping">
      <summary>true if the capture buffer is looping.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureDevicesCollection">
      <summary>Collection of capture devices.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.GetEnumerator">
      <summary>Gets an enumerator for this collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Count">
      <summary>Gets the number of elements.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Current">
      <summary>Gets the current element in the collection.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureDevicesCollection.Item(System.Int32)">
      <summary />
      <param name="index" />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect">
      <summary>The CaptureNoiseSuppressEffect object is used to set and retrieve parameters on a capture buffer that supports noise suppression. This object requires Microsoft Windows XP or later.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.op_Equality(Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect,Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.op_Inequality(Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect,Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.AllParameters">
      <summary>The noise suppression parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureNoiseSuppressEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ChorusEffect">
      <summary>The ChorusEffect object is used to set and retrieve effect parameters on a buffer that supports chorus.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.ChorusEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DelayMax">
      <summary>Maximum delay.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DelayMin">
      <summary>Minimum delay.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DepthMax">
      <summary>Maximum depth.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.DepthMin">
      <summary>Minimum depth.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FeedbackMax">
      <summary>Maximum feedback.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FeedbackMin">
      <summary>Minimum feedback.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FrequencyMax">
      <summary>Maximum frequency.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.FrequencyMin">
      <summary>Minimum frequency.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.Phase180">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.Phase90">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseMax">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseMin">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseNegative180">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseNegative90">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.PhaseZero">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WaveSin">
      <summary>Waveform shape of the LFO.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WaveTriangle">
      <summary>Waveform shape of the LFO.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WetDryMixMax">
      <summary>Ratio of wet (processed) signal to dry (unprocessed) signal.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ChorusEffect.WetDryMixMin">
      <summary>Ratio of wet (processed) signal to dry (unprocessed) signal.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.op_Equality(Microsoft.DirectX.DirectSound.ChorusEffect,Microsoft.DirectX.DirectSound.ChorusEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.op_Inequality(Microsoft.DirectX.DirectSound.ChorusEffect,Microsoft.DirectX.DirectSound.ChorusEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ChorusEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ChorusEffect.AllParameters">
      <summary>The chorus parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ChorusEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CompressorEffect">
      <summary>The CompressorEffect object is used to set and retrieve effect parameters on a buffer that supports compression.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.CompressorEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.AttackMax">
      <summary>Maximum time before compression reaches its full value</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.AttackMin">
      <summary>Minimum time before compression reaches its full value</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.GainMax">
      <summary>Maximum output gain of signal after compression.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.GainMin">
      <summary>Minimum output gain of signal after compression.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.PreDelayMax">
      <summary>Maximum time after Threshold is reached before attack phase is started, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.PreDelayMin">
      <summary>Minimum time after Threshold is reached before attack phase is started, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.RatioMax">
      <summary>Maximum compression ratio.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.RatioMin">
      <summary>Minimum compression ratio.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ReleaseMax">
      <summary>Maximum speed at which compression is stopped after input drops below Threshold.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ReleaseMin">
      <summary>Minimum speed at which compression is stopped after input drops below Threshold.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ThresholdMax">
      <summary>Maximum point at which compression begins, in decibels.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CompressorEffect.ThresholdMin">
      <summary>Minimum point at which compression begins, in decibels.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.op_Equality(Microsoft.DirectX.DirectSound.CompressorEffect,Microsoft.DirectX.DirectSound.CompressorEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.op_Inequality(Microsoft.DirectX.DirectSound.CompressorEffect,Microsoft.DirectX.DirectSound.CompressorEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CompressorEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CompressorEffect.AllParameters">
      <summary>The chorus parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CompressorEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ControlUnavailableException">
      <summary>The buffer control (volume, pan, and so on) requested by the caller is not available. Controls must be specified when the buffer is created.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ControlUnavailableException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Device">
      <summary>The Device object is used to create buffer objects, manage devices, and set up the environment.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Device.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Compact">
      <summary>Moves the unused portions of on-board sound memory, if any, to a contiguous block so that the largest portion of free memory will be available.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.#ctor(System.IntPtr)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.#ctor(System.Guid)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="guidDev" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.op_Equality(Microsoft.DirectX.DirectSound.Device,Microsoft.DirectX.DirectSound.Device)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.op_Inequality(Microsoft.DirectX.DirectSound.Device,Microsoft.DirectX.DirectSound.Device)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Device.SetCooperativeLevel(System.Windows.Forms.Control,Microsoft.DirectX.DirectSound.CooperativeLevel)">
      <summary>Sets the cooperative level of the application for this sound device.</summary>
      <param name="owner" />
      <param name="level" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.Caps">
      <summary>Retrieves the capabilities of the hardware device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.Certified">
      <summary>Ascertains whether the device driver is certified for DirectX.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Device.SpeakerConfig">
      <summary>Retrieves or sets the speaker configuration of the device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DevicesCollection">
      <summary>A collection of devices.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.GetEnumerator">
      <summary>Gets an enumerator for this collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.MoveNext">
      <summary>Advances the enumerator to the next element of the collection.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DevicesCollection.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DevicesCollection.Count">
      <summary>Gets the number of elements.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DevicesCollection.Current">
      <summary>Gets the current element in the collection.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DevicesCollection.Item(System.Int32)">
      <summary />
      <param name="index" />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DistortionEffect">
      <summary>The DistortionEffect object is used to set and retrieve effect parameters on a buffer that supports distortion.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.DistortionEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.EdgeMax">
      <summary>Maximum percentage of distortion intensity.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.EdgeMin">
      <summary>Minimum percentage of distortion intensity.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.GainMax">
      <summary>Maximum amount of signal change after distortion.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.GainMin">
      <summary>Minimum amount of signal change after distortion.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqBandwidthMax">
      <summary>Maximum width of frequency band that determines range of harmonic content addition.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqBandwidthMin">
      <summary>Minimum width of frequency band that determines range of harmonic content addition.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqCenterFrequencyMax">
      <summary>Maximum center frequency of harmonic content addition.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PostEqCenterFrequencyMin">
      <summary>Miminum center frequency of harmonic content addition.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PreLowPassCutoffMax">
      <summary>Maximum filter cutoff for high-frequency harmonics attenuation.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DistortionEffect.PreLowPassCutoffMin">
      <summary>Minimum filter cutoff for high-frequency harmonics attenuation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.op_Equality(Microsoft.DirectX.DirectSound.DistortionEffect,Microsoft.DirectX.DirectSound.DistortionEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.op_Inequality(Microsoft.DirectX.DirectSound.DistortionEffect,Microsoft.DirectX.DirectSound.DistortionEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DistortionEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DistortionEffect.AllParameters">
      <summary>The distortion parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DistortionEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DSoundHelper">
      <summary>Helper utility class for DirectSound</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsClassAcousticEchoCancellation">
      <summary>Acoustic echo cancellation capture effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsClassNoiseSuppression">
      <summary>Noise suppression capture effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsMsAcousticEchoCancellation">
      <summary>Microsoft acoustic echo cancellation capture effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsMsNoiseSuppression">
      <summary>Microsoft noise suppression capture effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsSystemAcousticEchoCancellation">
      <summary>System default acoustic echo cancellation capture effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.CaptureEffectsSystemNoiseSuppression">
      <summary>System default noise suppression capture effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultCaptureDevice">
      <summary>System-wide default audio capture device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultConeAngle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultConeOutsideVolume">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultDistanceFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultDopplerFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultMaxDistance">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultMinDistance">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultPlaybackDevice">
      <summary>System-wide default audio playback device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultRolloffFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultVoiceCaptureDevice">
      <summary>Default voice capture device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.DefaultVoicePlaybackDevice">
      <summary>Default voice playback device.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmDefault">
      <summary>Default 3-D algorithm</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmHrtfFull">
      <summary>The 3-D API is processed with the high quality 3-D audio algorithm. This algorithm gives the highest quality 3-D audio effect, but uses more CPU cycles.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmHrtfLight">
      <summary>The 3-D API is processed with the efficient 3-D audio algorithm. This algorithm gives a good 3-D audio effect, but uses fewer CPU cycles than Guid3DAlgorithmHrtfFull</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Guid3DAlgorithmNoVirtualization">
      <summary>3-D output is mapped into normal left and right stereo panning. At 90 degrees to the left, the sound is coming out of only the left speaker; at 90 degrees to the right, sound is coming out of only the right speaker. The vertical axis is ignored except for scaling of volume due to distance. Doppler shift and volume scaling are still applied, but the 3-D filtering is not performed on this buffer. This is the most efficient software implementation, but provides no virtual 3-D audio effect.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.GuidAllObjects">
      <summary>All objects</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Interface3DBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.Interface3DListener">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureEffectsAcousticEchoCancellation">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceCaptureEffectsNoiseSuppress">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceDirectSound">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceDirectSoundCapture">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsChorus">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsCompressor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsDistortion">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsEcho">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsFlanger">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsGargle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsInteractive3DLevel2Reverb">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsParamEq">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceEffectsWavesReverb">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceNotify">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.InterfaceSecondaryBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxConeAngle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxDistanceFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxDopplerFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MaxRolloffFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinConeAngle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinDistanceFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinDopplerFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.MinRolloffFactor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardChorusGuid">
      <summary>Chorus effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardCompressorGuid">
      <summary>Compressor effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardDistortionGuid">
      <summary>Distortion effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardEchoGuid">
      <summary>Echo effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardFlangerGuid">
      <summary>Flanger effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardGargleGuid">
      <summary>Gargle effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardInteractive3DLevel2ReverbGuid">
      <summary>Environmental reverberation effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardParamEqGuid">
      <summary>Parametric equalizer effect</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.DSoundHelper.StandardWavesReverbGuid">
      <summary>Waves reverberation effect</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DSoundHelper.#cctor">
      <summary>Initializes new class</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DSoundHelper.GetObjectFromInterfaceGuid(System.IntPtr,System.Guid,System.Object)">
      <summary>Returns an object based on an object guid.</summary>
      <param name="lpVal" />
      <param name="iid" />
      <param name="source" />
      <returns />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EchoEffect">
      <summary>The EchoEffect object is used to set and retrieve effect parameters on a buffer that supports echo.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.EchoEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.FeedbackMax">
      <summary>Maximum percentage of output fed back into input.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.FeedbackMin">
      <summary>Minimum percentage of output fed back into input.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.LeftDelayMax">
      <summary>Maximum delay for left channel, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.LeftDelayMin">
      <summary>Minimum delay for left channel, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.PanDelayMax">
      <summary>Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.PanDelayMin">
      <summary>Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.RightDelayMax">
      <summary>Maximum delay for right channel, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.RightDelayMin">
      <summary>Minimum delay for right channel, in milliseconds.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.WetDryMixMax">
      <summary>Maximum ratio of wet (processed) signal to dry (unprocessed) signal.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EchoEffect.WetDryMixMin">
      <summary>Minimum ratio of wet (processed) signal to dry (unprocessed) signal.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.op_Equality(Microsoft.DirectX.DirectSound.EchoEffect,Microsoft.DirectX.DirectSound.EchoEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.op_Inequality(Microsoft.DirectX.DirectSound.EchoEffect,Microsoft.DirectX.DirectSound.EchoEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EchoEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EchoEffect.AllParameters">
      <summary>The echo parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EchoEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsUnavailableException">
      <summary>The effects requested could not be found on the system, or they are in the wrong order or in the wrong location; for example, an effect expected in hardware was found in software.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsUnavailableException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.FlangerEffect">
      <summary>The IDirectSoundFXFlanger8 object is used to set and retrieve effect parameters on a buffer that supports flange.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.FlangerEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DelayMax">
      <summary>Maximum number of milliseconds the input is delayed before it is played back.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DelayMin">
      <summary>Minimum number of milliseconds the input is delayed before it is played back.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DepthMax">
      <summary>Maximum percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.DepthMin">
      <summary>Minimum percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FeedbackMax">
      <summary>Maximum percentage of output signal to feed back into the effect's input.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FeedbackMin">
      <summary>Minimum percentage of output signal to feed back into the effect's input.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FrequencyMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.FrequencyMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.Phase180">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.Phase90">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseNeg180">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseNeg90">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.PhaseZero">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WaveSin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WaveTriangle">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WetDryMixMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.FlangerEffect.WetDryMixMin">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.op_Equality(Microsoft.DirectX.DirectSound.FlangerEffect,Microsoft.DirectX.DirectSound.FlangerEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.op_Inequality(Microsoft.DirectX.DirectSound.FlangerEffect,Microsoft.DirectX.DirectSound.FlangerEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FlangerEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.FlangerEffect.AllParameters">
      <summary>The flange parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.FlangerEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.FullDuplex">
      <summary>The FullDuplex object represents a full-duplex stream.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.FullDuplex.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.Windows.Forms.Control,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="captureDesc" />
      <param name="bufferDesc" />
      <param name="owner" />
      <param name="level" />
      <param name="captureBuffer" />
      <param name="buffer" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(System.Guid,System.Guid,Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.Windows.Forms.Control,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="guidCapture" />
      <param name="guidRender" />
      <param name="captureDesc" />
      <param name="bufferDesc" />
      <param name="owner" />
      <param name="level" />
      <param name="captureBuffer" />
      <param name="buffer" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.IntPtr,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="captureDesc" />
      <param name="bufferDesc" />
      <param name="owner" />
      <param name="level" />
      <param name="captureBuffer" />
      <param name="buffer" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.#ctor(System.Guid,System.Guid,Microsoft.DirectX.DirectSound.CaptureBufferDescription,Microsoft.DirectX.DirectSound.BufferDescription,System.IntPtr,Microsoft.DirectX.DirectSound.CooperativeLevel,Microsoft.DirectX.DirectSound.CaptureBuffer@,Microsoft.DirectX.DirectSound.SecondaryBuffer@)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="guidCapture" />
      <param name="guidRender" />
      <param name="captureDesc" />
      <param name="bufferDesc" />
      <param name="owner" />
      <param name="level" />
      <param name="captureBuffer" />
      <param name="buffer" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.op_Equality(Microsoft.DirectX.DirectSound.FullDuplex,Microsoft.DirectX.DirectSound.FullDuplex)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.op_Inequality(Microsoft.DirectX.DirectSound.FullDuplex,Microsoft.DirectX.DirectSound.FullDuplex)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.FullDuplex.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.FullDuplex.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.GargleEffect">
      <summary>The GargleEffect object is used to set and retrieve effect parameters on a buffer that supports amplitude modulation.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.GargleEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.RateHzMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.RateHzMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.WaveSquare">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.GargleEffect.WaveTriangle">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.op_Equality(Microsoft.DirectX.DirectSound.GargleEffect,Microsoft.DirectX.DirectSound.GargleEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.op_Inequality(Microsoft.DirectX.DirectSound.GargleEffect,Microsoft.DirectX.DirectSound.GargleEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.GargleEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.GargleEffect.AllParameters">
      <summary>The gargle parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.GargleEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect">
      <summary>The object is used to set and retrieve effect parameters on a buffer that supports I3DL2 (Interactive 3D Audio Level 2) reverberation effects.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayHfRatioDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayHfRatioMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayHfRatioMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayTimeDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayTimeMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DecayTimeMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DensityDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DensityMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DensityMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DiffusionDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DiffusionMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.DiffusionMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.HfReferenceDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.HfReferenceMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.HfReferenceMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.QualityDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.QualityMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.QualityMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDelayDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDelayMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsDelayMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReflectionsMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDelayDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDelayMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbDelayMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.ReverbMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomHfDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomHfMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomHfMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomRollOffFactorDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomRollOffFactorMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.RoomRollOffFactorMin">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.op_Equality(Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect,Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.op_Inequality(Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect,Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.AllParameters">
      <summary>The I3DL2 environmental reverberation parameters of a buffer</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Preset">
      <summary>Standard reverberation parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Interactive3DLevel2ReverbEffect.Quality">
      <summary>The quality of the environmental reverberation effect.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.InvalidCallException">
      <summary>This function is not valid for the current state of this object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.InvalidCallException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Listener3D">
      <summary>The Listener3D object is used to retrieve and set parameters that describe a listener's position, orientation, and listening environment in 3-D space.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Listener3D.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactorDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactorMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactorMin">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.CommitDeferredSettings">
      <summary>Commits any deferred settings made since the last call to this method.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="buff" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="buff" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.#ctor(Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.op_Equality(Microsoft.DirectX.DirectSound.Listener3D,Microsoft.DirectX.DirectSound.Listener3D)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.op_Inequality(Microsoft.DirectX.DirectSound.Listener3D,Microsoft.DirectX.DirectSound.Listener3D)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3D.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.AllParameters">
      <summary>All 3-D parameters of the sound environment and the listener.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Deferred">
      <summary>Determines if settings are set immediately or deferred.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.DistanceFactor">
      <summary>The distance factor, which is the number of meters in a vector unit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.DopplerFactor">
      <summary>The multiplier for the Doppler effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Orientation">
      <summary>The orientation of the listener's head.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Position">
      <summary>The listener's position.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.RolloffFactor">
      <summary>The rolloff factor, which determines the rate of attenuation over distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3D.Velocity">
      <summary>The listener's velocity.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.NoAggregationException">
      <summary>The object does not support aggregation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoAggregationException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.NoDriverException">
      <summary>No sound driver is available for use, or the given Guid is not a valid DirectSound device ID.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.NoDriverException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Notify">
      <summary>The Notify object sets up notification events for a playback or capture buffer.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.Notify.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.#ctor(Microsoft.DirectX.DirectSound.CaptureBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.#ctor(Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.#ctor(Microsoft.DirectX.DirectSound.Buffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.op_Equality(Microsoft.DirectX.DirectSound.Notify,Microsoft.DirectX.DirectSound.Notify)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.op_Inequality(Microsoft.DirectX.DirectSound.Notify,Microsoft.DirectX.DirectSound.Notify)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.SetNotificationPositions(Microsoft.DirectX.DirectSound.BufferPositionNotify[],System.Int32)">
      <summary>Sets the notification positions. During capture or playback, whenever the read or play cursor reaches one of the specified offsets, the associated event is signaled.</summary>
      <param name="notify" />
      <param name="numNotificationPositions" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Notify.SetNotificationPositions(Microsoft.DirectX.DirectSound.BufferPositionNotify[])">
      <summary>Sets the notification positions. During capture or playback, whenever the read or play cursor reaches one of the specified offsets, the associated event is signaled.</summary>
      <param name="notify" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Notify.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ObjectNotFoundException">
      <summary>The requested object was not found.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException">
      <summary>Another application has a higher priority level, preventing this call from succeeding.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.OtherApplicationHasPriorityException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.ParamEqEffect">
      <summary>The ParamEqEffect object is used to set and retrieve effect parameters on a buffer that supports parametric equalizer effects.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.ParamEqEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.BandwidthMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.BandwidthMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.CenterMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.CenterMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.GainMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.ParamEqEffect.GainMin">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.op_Equality(Microsoft.DirectX.DirectSound.ParamEqEffect,Microsoft.DirectX.DirectSound.ParamEqEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.op_Inequality(Microsoft.DirectX.DirectSound.ParamEqEffect,Microsoft.DirectX.DirectSound.ParamEqEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.ParamEqEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ParamEqEffect.AllParameters">
      <summary>The parametric equalizer parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.ParamEqEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.PriorityLevelNeededException">
      <summary>A cooperative level of Priority or higher is required.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.PriorityLevelNeededException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.SecondaryBuffer">
      <summary>The SecondaryBuffer object is used to manage sound buffers.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.SecondaryBuffer.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.AcquireResources(System.Int32,System.Int32)">
      <summary>Allocates resources for a buffer that was created with the LocateDeferred flag.</summary>
      <param name="flags" />
      <param name="effectsCount" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Clone(Microsoft.DirectX.DirectSound.Device)">
      <summary>Duplicates the object.</summary>
      <param name="parent" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="length" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.String,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="fileName" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,System.Int32,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="length" />
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.IO.Stream,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="source" />
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(System.String,Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="fileName" />
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.#ctor(Microsoft.DirectX.DirectSound.BufferDescription,Microsoft.DirectX.DirectSound.Device)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="desc" />
      <param name="parent" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetEffects(System.Int32,System.Int32)">
      <summary>Returns the effect object at a particular index.</summary>
      <param name="startIndex" />
      <param name="count" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetEffects(System.Int32)">
      <summary>Returns the effect object at a particular index.</summary>
      <param name="index" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.GetObjectInPath(System.Guid,System.Int32,System.Guid)">
      <summary>Retrieves an effect object associated with the buffer.</summary>
      <param name="guidObject" />
      <param name="index" />
      <param name="guidInterface" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.op_Equality(Microsoft.DirectX.DirectSound.SecondaryBuffer,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.op_Inequality(Microsoft.DirectX.DirectSound.SecondaryBuffer,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SecondaryBuffer.SetEffects(Microsoft.DirectX.DirectSound.EffectDescription[])">
      <summary>Enables effects on a buffer.</summary>
      <param name="dsEff" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.SecondaryBuffer.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.SendLoopException">
      <summary>A circular loop of send effects was detected.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SendLoopException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.SoundException">
      <summary>Root exception type for all DirectSound exceptions. Derives from DirectXException.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.SoundException.GetExceptionFromResultInternal(System.Int32)">
      <summary />
      <param name="resultCode" />
      <returns />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.UnsupportedException">
      <summary>The function called is not supported at this time.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="info" />
      <param name="context" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
      <param name="inner" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="message" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.UnsupportedException.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.WavesReverbEffect">
      <summary>The WavesReverbEffect object is used to set and retrieve effect parameters on a buffer that supports Waves reverberation.</summary>
    </member>
    <member name="E:Microsoft.DirectX.DirectSound.WavesReverbEffect.Disposing">
      <summary>Adds an event handler to listen to the Disposing event on the object.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.HighFrequencyRtRatioDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.HighFrequencyRtRatioMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.HighFrequencyRtRatioMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.InGainDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.InGainMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.InGainMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbMixDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbMixMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbMixMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbTimeDefault">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbTimeMax">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WavesReverbEffect.ReverbTimeMin">
      <summary />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.#ctor(System.IntPtr,Microsoft.DirectX.DirectSound.SecondaryBuffer)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="lp" />
      <param name="source" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Dispose">
      <summary>Immediately releases the unmanaged resources used by the object.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Equals(System.Object)">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
      <param name="compare" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.Finalize">
      <summary>Forces an object to free resources before the object is destroyed by the Garbage Collector.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.GetObjectByValue(System.Int32)">
      <summary>This member supports the Managed DirectX infrastructure and is not intended to be used directly from your code.</summary>
      <param name="objId" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.op_Equality(Microsoft.DirectX.DirectSound.WavesReverbEffect,Microsoft.DirectX.DirectSound.WavesReverbEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.op_Inequality(Microsoft.DirectX.DirectSound.WavesReverbEffect,Microsoft.DirectX.DirectSound.WavesReverbEffect)">
      <summary />
      <param name="left" />
      <param name="right" />
      <returns />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WavesReverbEffect.raise_Disposing(System.Object,System.EventArgs)">
      <summary />
      <param name="i1" />
      <param name="i2" />
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WavesReverbEffect.AllParameters">
      <summary>The Waves reverb parameters of a buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WavesReverbEffect.Disposed">
      <summary>Retrieves a value that is true if the object is disposed; otherwise the value is false.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferDescriptionFlags">
      <summary>Flags specifying the capabilities of the buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.LocateInSoftware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.LocateInHardware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.StickyFocus">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.StaticBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.PrimaryBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.Mute3DAtMaximumDistance">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.GlobalFocus">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.CanGetCurrentPosition">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlVolume">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlPositionNotify">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlPan">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlEffects">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.ControlFrequency">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.Control3D">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferDescriptionFlags.DeferLocation">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferPlayFlags">
      <summary>Flags specifying the play behavior of the buffer.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.TerminateByPriority">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.TerminateByDistance">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.TerminateByTime">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.LocateInSoftware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.LocateInHardware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.Looping">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferPlayFlags.Default">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferSize">
      <summary>Minimum and maximum buffer size.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferSize.EffectsMin">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferSize.Max">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.BufferSize.Min">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue">
      <summary>Return values for Capture effects.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue.LocatedInSoftware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CaptureEffectsReturnValue.LocatedInHardware">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CooperativeLevel">
      <summary>Various cooperative levels.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CooperativeLevel.Priority">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CooperativeLevel.WritePrimary">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.CooperativeLevel.Normal">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset">
      <summary>Environmental presets</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Plate">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.LargeHall">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.MediumHall">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.LargeRoom">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.MediumRoom">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.SmallRoom">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.UnderWater">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.SewerPipe">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.ParkingLot">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Plain">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Quarry">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Mountains">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.City">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Forest">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Alley">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.StoneCorridor">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Hallway">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.CarpetedHallway">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Hangar">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Arena">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Cave">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.ConcertHall">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Auditorium">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.StoneRoom">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Livingroom">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Bathroom">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Room">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.PaddedCell">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Generic">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsEnvironmentPreset.Default">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsReturnValue">
      <summary>Return values for effects.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.SendLoop">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.Unknown">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.Failed">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.Unallocated">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.LocatedInSoftware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.LocatedInHardware">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectsReturnValue.Present">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectStatus">
      <summary>Status of effects.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.CurrentlyConverged">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.PreviouslyDiverged">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.ContinuouslyConverged">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.EffectStatus.Uninitialized">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Frequency">
      <summary>Frequency</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Frequency.Original">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Frequency.Max">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Frequency.Min">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.LockFlag">
      <summary>Various locking flags.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.LockFlag.None">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.LockFlag.EntireBuffer">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.LockFlag.FromWriteCursor">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Mode3D">
      <summary>The 3-D sound processing mode to be set.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Mode3D.Disable">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Mode3D.HeadRelative">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Mode3D.Normal">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.OperationMode">
      <summary>Operation mode.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.OperationMode.FullDuplex">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.OperationMode.HalfDuplex">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.OperationMode.PassThrough">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Pan">
      <summary>Pan</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Pan.Center">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Pan.Right">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Pan.Left">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.PositionNotifyFlag">
      <summary>Flags for position notifications.</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.PositionNotifyFlag.OffsetStop">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.PositionNotifyFlag.None">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Volume">
      <summary>Volume</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Volume.Max">
      <summary />
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.Volume.Min">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.WaveFormatTag">
      <summary>Wave format type</summary>
    </member>
    <member name="F:Microsoft.DirectX.DirectSound.WaveFormatTag.Pcm">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Angles">
      <summary>Angles</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Angles.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Angles.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Angles.Inside">
      <summary>Inside angles</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Angles.Outside">
      <summary>Outside angles</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Buffer3DSettings">
      <summary>Contains all information necessary to uniquely describe the location, orientation, and motion of a 3-D sound buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3DSettings.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Buffer3DSettings.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.ConeOrientation">
      <summary>Describes the current orientation of this 3-D buffer's sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.ConeOutsideVolume">
      <summary>The cone outside volume.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.InsideConeAngle">
      <summary>The angle of the inside sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.MaxDistance">
      <summary>The maximum distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.MinDistance">
      <summary>The minimum distance.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.Mode">
      <summary>The 3-D sound processing mode to be set.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.OutsideConeAngle">
      <summary>The angle of the outside sound projection cone.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.Position">
      <summary>Describes the current position of the 3-D sound buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Buffer3DSettings.Velocity">
      <summary>Describes the current velocity of the 3-D sound buffer.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferCaps">
      <summary>Structure describes the capabilities of a DirectSound buffer object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferCaps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.BufferBytes">
      <summary>Size of this buffer, in bytes.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.CanGetCurrentPosition">
      <summary>Can get the current position</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.Control3D">
      <summary>The buffer has 3-D control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlEffects">
      <summary>The buffer supports effects processing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlFrequency">
      <summary>The buffer has frequency control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlPan">
      <summary>The buffer has pan control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlPositionNotify">
      <summary>The buffer has position notification capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.ControlVolume">
      <summary>The buffer has volume control capability.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.GlobalFocus">
      <summary>The buffer is a global sound buffer. With this flag set, an application using DirectSound can continue to play its buffers if the user switches focus to another application, even if the new application uses DirectSound.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.LocateInHardware">
      <summary>The buffer uses hardware mixing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.LocateInSoftware">
      <summary>The buffer is in software memory and uses software mixing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.LocationDefer">
      <summary>The buffer can be assigned to a hardware or software resource at play time.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.Mute3DAtMaximumDistance">
      <summary>The sound is reduced to silence at the maximum distance. The buffer will stop playing when the maximum distance is exceeded, so that processor time is not wasted. Applies only to software buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.PlayCpuOverhead">
      <summary>The processing overhead as a percentage of main processor cycles needed to mix this sound buffer. For hardware buffers, this member will be zero because the mixing is performed by the sound device. For software buffers, this member depends on the buffer format and the speed of the system processor.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.PrimaryBuffer">
      <summary>The buffer is a primary buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.StaticBuffer">
      <summary>The buffer is in on-board hardware memory.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.StickyFocus">
      <summary>The buffer has sticky focus. If the user switches to another application not using DirectSound, the buffer is still audible. However, if the user switches to another DirectSound application, the buffer is muted.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferCaps.UnlockTransferRate">
      <summary>The rate, in kilobytes per second, at which data is transferred to the buffer memory when Buffer.Read or Buffer.Write is called.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferPositionNotify">
      <summary>Describes a notification position.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferPositionNotify.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferPositionNotify.EventNotifyHandle">
      <summary>Handle to the event to be signaled when the offset has been reached.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferPositionNotify.Offset">
      <summary>Offset from the beginning of the buffer where the notify event is to be triggered, or OffsetStop</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.BufferStatus">
      <summary>Status of the buffer</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferStatus.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.BufferStatus.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.BufferLost">
      <summary>Buffer is lost and must be restored</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.LocatedInHardware">
      <summary>Buffer is located in hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.LocatedInSoftware">
      <summary>Buffer is located in software</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.Looping">
      <summary>Buffer is looping.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.Playing">
      <summary>Buffer is playing.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.BufferStatus.Terminated">
      <summary>Buffer has terminated.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Caps">
      <summary>Describes the capabilities of a device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Caps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Caps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Certified">
      <summary>The driver has been tested and certified by Microsoft. This flag is always set for WDM drivers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.ContinuousRate">
      <summary>The device supports all sample rates between the MinSecondarySampleRate and MaxSecondarySampleRate member values. Typically, this means that the actual output rate will be within +/- 10 hertz (Hz) of the requested frequency.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.EmulateDriver">
      <summary>The device does not have a DirectSound driver installed, so it is being emulated through the waveform-audio functions. Performance degradation should be expected.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardware3DAllBuffers">
      <summary>Number of unallocated 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardware3DStaticBuffers">
      <summary>Number of unallocated static 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardware3DStreamingBuffers">
      <summary>Number of unallocated streaming 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMemoryBytes">
      <summary>Size, in bytes, of the free memory on the sound card.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMixingAllBuffers">
      <summary>Number of unallocated buffers. On WDM drivers, this includes FreeHardware3DAllBuffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMixingStaticBuffers">
      <summary>Number of unallocated static buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.FreeHardwareMixingStreamingBuffers">
      <summary>Number of unallocated streaming buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxContigousFreeHardwareMemoryBytes">
      <summary>Size, in bytes, of the largest contiguous block of free memory on the sound card.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardware3DAllBuffers">
      <summary>Maximum number of 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardware3DStaticBuffers">
      <summary>Maximum number of static 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardware3DStreamingBuffers">
      <summary>Maximum number of streaming 3-D buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardwareMixingAllBuffers">
      <summary>Number of buffers that can be mixed in hardware. This member can be less than the sum of MaxHardwareMixingStaticBuffers and MaxHardwareMixingStreamingBuffers. Resource tradeoffs frequently occur.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardwareMixingStaticBuffers">
      <summary>Maximum number of static buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxHardwareMixingStreamingBuffers">
      <summary>Maximum number of streaming sound buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MaxSecondarySampleRate">
      <summary>maximum sample rate specifications that are supported by this device's hardware secondary sound buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.MinSecondarySampleRate">
      <summary>Minimum sample rate specifications that are supported by this device's hardware secondary sound buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PlayCpuOverheadSoftwareBuffers">
      <summary>The processing overhead, as a percentage of main processor cycles, needed to mix software buffers. This varies according to the bus type, the processor type, and the clock speed.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Primary16Bit">
      <summary>The device supports a primary buffer with 16-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Primary8Bit">
      <summary>The device supports primary buffers with 8-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PrimaryBuffers">
      <summary>Number of primary buffers supported. This value will always be 1.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PrimaryMono">
      <summary>The device supports monophonic primary buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.PrimaryStereo">
      <summary>The device supports stereo primary buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Secondary16Bit">
      <summary>The device supports hardware-mixed secondary sound buffers with 16-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.Secondary8Bit">
      <summary>The device supports hardware-mixed secondary sound buffers with 8-bit samples.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.SecondaryMono">
      <summary>The device supports hardware-mixed monophonic secondary buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.SecondaryStereo">
      <summary>The device supports hardware-mixed stereo secondary buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.TotalHardwareMemoryBytes">
      <summary>Size, in bytes, of the amount of memory on the sound card that stores static sound buffers.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Caps.UnlockTransferRateHardwareBuffers">
      <summary>The rate, in kilobytes per second, at which data can be transferred to hardware static sound buffers. This and the number of bytes transferred determines the duration of a call to the Buffer.Read or Buffer.Write method.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureBufferCaps">
      <summary>Describes the capabilities of a capture buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferCaps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferCaps.BufferBytes">
      <summary>The size, in bytes, of the capture buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferCaps.WaveMapped">
      <summary>Determines if the buffer wave mapped</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureBufferDescription">
      <summary>Describes a capture buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferDescription.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureBufferDescription.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.BufferBytes">
      <summary>Size of capture buffer to create, in bytes.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.CaptureEffectDescription">
      <summary>Describe effects supported by hardware for the buffer.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.ControlEffects">
      <summary>The buffer supports effects.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.Format">
      <summary>The format in which to capture the data.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureBufferDescription.WaveMapped">
      <summary>The Win32 wave mapper will be used for formats not supported by the device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureCaps">
      <summary>Describes the capabilities of the capture device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureCaps.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureCaps.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Certified">
      <summary>The driver for the device is a certified WDM driver.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Channels">
      <summary>Number of channels supported by the device, where 1 is mono, 2 is stereo, and so on.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.EmulatedDriver">
      <summary>There is no DirectSoundCapture driver for the device, so the standard waveform audio functions are being used.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzMono16Bit">
      <summary>11Khz 16 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzMono8Bit">
      <summary>11Khz 8 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzStereo16Bit">
      <summary>11Khz 16 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format11KhzStereo8Bit">
      <summary>11Khz 8 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzMono16Bit">
      <summary>22Khz 16 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzMono8Bit">
      <summary>22Khz 8 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzStereo16Bit">
      <summary>22Khz 16 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format22KhzStereo8Bit">
      <summary>22Khz 8 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzMono16Bit">
      <summary>44Khz 16 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzMono8Bit">
      <summary>44Khz 8 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzStereo16Bit">
      <summary>44Khz 16 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format44KhzStereo8Bit">
      <summary>44Khz 8 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzMono16Bit">
      <summary>48Khz 16 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzMono8Bit">
      <summary>48Khz 8 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzStereo16Bit">
      <summary>48Khz 16 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format48KhzStereo8Bit">
      <summary>48Khz 8 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzMono16Bit">
      <summary>96Khz 16 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzMono8Bit">
      <summary>96Khz 8 Bit Mono format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzStereo16Bit">
      <summary>96Khz 16 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.Format96KhzStereo8Bit">
      <summary>96Khz 8 Bit Stereo format</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureCaps.MultipleCapture">
      <summary>Multiple capture objects can be used simultaneously on the capture device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectDescription">
      <summary>Contains parameters for an effect associated with a capture buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectDescription.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectDescription.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.GuidEffectsClass">
      <summary>Specifies the class identifier of the effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.GuidEffectsInstance">
      <summary>Specifies the unique identifier of the preferred effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.LocateInHardware">
      <summary>Effect specified must be in hardware.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectDescription.LocateInSoftware">
      <summary>Effect specified must be in software.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation">
      <summary>contains parameters for acoustic echo cancellation in a capture buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.Enable">
      <summary>Boolean value that specifies whether the effect is enabled.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.Mode">
      <summary>Operation mode.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsAcousticEchoCancellation.NoiseFill">
      <summary>Boolean value that specifies whether to enable background comfort noise, which makes the capture signal sound more natural by preventing periods of dead silence. By default, background comfort noise is not enabled.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress">
      <summary>Contains parameters for noise suppression in a capture buffer</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.CaptureEffectsNoiseSuppress.Enable">
      <summary>Boolean value that specifies whether the effect is enabled.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.DeviceInformation">
      <summary>Information about a device.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DeviceInformation.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.DeviceInformation.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DeviceInformation.Description">
      <summary>String that provides a textual description of the DirectSound device.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DeviceInformation.DriverGuid">
      <summary>Identifies the DirectSound driver being enumerated</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.DeviceInformation.ModuleName">
      <summary>String that specifies the module name of the DirectSound driver corresponding to this device.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectDescription">
      <summary>Describes an effect associated with a buffer.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectDescription.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectDescription.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectDescription.GuidEffectClass">
      <summary>Class identifier of the effect.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectDescription.LocateInHardware">
      <summary>Effect must be in hardware. Because DirectX 9.0 does not support hardware acceleration of effects, this flag should not be used.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectDescription.LocateInSoftware">
      <summary>Effect must be in software. In DirectX 9.0, all effects are in software regardless of whether this flag is set.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsChorus">
      <summary>Contains parameters for a chorus effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsChorus.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsChorus.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Delay">
      <summary>Number of milliseconds the input is delayed before it is played back.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Depth">
      <summary>Percentage by which the delay time is modulated by the low-frequency oscillator, in hundredths of a percentage point.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Feedback">
      <summary>Percentage of output signal to feed back into the effect's input.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Frequency">
      <summary>Frequency of the LFO.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Phase">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.Waveform">
      <summary>Waveform shape of the LFO.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsChorus.WetDryMix">
      <summary>Ratio of wet (processed) signal to dry (unprocessed) signal.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsCompressor">
      <summary>Contains parameters for a compression effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsCompressor.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsCompressor.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Attack">
      <summary>Time before compression reaches its full value.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Gain">
      <summary>Output gain of signal after compression.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Predelay">
      <summary>Time after Threshold is reached before attack phase is started, in milliseconds.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Ratio">
      <summary>Compression ratio. The default value is 3, which means 3:1 compression.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Release">
      <summary>Speed at which compression is stopped after input drops below Threshold.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsCompressor.Threshold">
      <summary>Point at which compression begins, in decibels.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsDistortion">
      <summary>contains parameters for a distortion effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsDistortion.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsDistortion.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Edge">
      <summary>Percentage of distortion intensity. The default value is 15 percent.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.Gain">
      <summary>Amount of signal change after distortion. The default value is -18 dB.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqBandwidth">
      <summary>Width of frequency band that determines range of harmonic content addition. The default value is 2400 Hz.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PostEqCenterFrequency">
      <summary>Center frequency of harmonic content addition. The default value is 2400 Hz.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsDistortion.PreLowpassCutoff">
      <summary>Filter cutoff for high-frequency harmonics attenuation. The default value is 8000 Hz.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsEcho">
      <summary>Contains parameters for an echo effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsEcho.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsEcho.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.Feedback">
      <summary>Percentage of output fed back into input. The default value is 50.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.LeftDelay">
      <summary>Delay for left channel, in milliseconds. The default value is 500 ms.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.PanDelay">
      <summary>Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.RightDelay">
      <summary>Delay for right channel, in milliseconds. The default value is 500 ms.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsEcho.WetDryMix">
      <summary>Ratio of wet (processed) signal to dry (unprocessed) signal.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsFlanger">
      <summary>Contains parameters for a flange effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsFlanger.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsFlanger.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Delay">
      <summary>Number of milliseconds the input is delayed before it is played back. The default value is 2 ms.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Depth">
      <summary>Percentage by which the delay time is modulated by the low-frequency oscillator (LFO), in hundredths of a percentage point. The default value is 100.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Feedback">
      <summary>Percentage of output signal to feed back into the effect's input. The default value is -50.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Frequency">
      <summary>Frequency of the LFO. The default value is 0.25.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Phase">
      <summary>Phase differential between left and right LFOs.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.Waveform">
      <summary>Waveform shape of the LFO. By default, the waveform is a sine.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsFlanger.WetDryMix">
      <summary>Ratio of wet (processed) signal to dry (unprocessed) signal. The default value is 50.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsGargle">
      <summary>Contains parameters for an amplitude modulation effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsGargle.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsGargle.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsGargle.RateHz">
      <summary>Rate of modulation, in Hertz. The default value is 20.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsGargle.WaveShape">
      <summary>Shape of the modulation waveform. By default the waveform is a triangle.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb">
      <summary>Contains parameters for an I3DL2 (Interactive 3D Audio Level 2) reverberation effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayHfRatio">
      <summary>Ratio of the decay time at high frequencies to the decay time at low frequencies.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.DecayTime">
      <summary>Decay time, in seconds.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Density">
      <summary>Modal density in the late reverberation decay, in percent.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Diffusion">
      <summary>Echo density in the late reverberation decay, in percent.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.HfReference">
      <summary>Reference high frequency, in hertz.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reflections">
      <summary>Attenuation of early reflections relative to Room, in mB.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReflectionsDelay">
      <summary>Delay time of the first reflection relative to the direct path, in seconds.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Reverb">
      <summary>Attenuation of late reverberation relative to Room, in mB.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.ReverbDelay">
      <summary>Time limit between the early reflections and the late reverberation relative to the time of the first reflection, in seconds.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.Room">
      <summary>Attenuation of the room effect, in millibels (mB).</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomHf">
      <summary>Attenuation of the room high-frequency effect, in mB.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsInteractive3DLevel2Reverb.RoomRolloffFactor">
      <summary>Rolloff factor for the reflected signals.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsParamEq">
      <summary>Contains parameters for a parametric equalizer effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsParamEq.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsParamEq.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Bandwidth">
      <summary>Bandwidth, in semitones. The default value is 12.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Center">
      <summary>Center frequency, in hertz. This value cannot exceed one-third of the frequency of the buffer. The default value is 8000.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsParamEq.Gain">
      <summary>Gain, The default value is 0.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.EffectsWavesReverb">
      <summary>Contains parameters for a Waves reverberation effect.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsWavesReverb.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.HighFrequencyRtRatio">
      <summary>High-frequency reverb time ratio.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.InGain">
      <summary>Input gain of signal, in decibels (dB), the default value is 0 dB.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbMix">
      <summary>Reverb mix, in dB.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.EffectsWavesReverb.ReverbTime">
      <summary>Reverb time, in milliseconds.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Listener3DOrientation">
      <summary>Encompasses the front and top 3-D vectors for listeners orientation.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DOrientation.#ctor(Microsoft.DirectX.Vector3,Microsoft.DirectX.Vector3)">
      <summary>Initializes a new instance of the object.</summary>
      <param name="front" />
      <param name="top" />
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DOrientation.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DOrientation.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DOrientation.Front">
      <summary>Front of listener's orientation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DOrientation.Top">
      <summary>Top of listeners orientation.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Listener3DSettings">
      <summary>Describes the 3-D world parameters and the position of the listener.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DSettings.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Listener3DSettings.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DistanceFactor">
      <summary>Number of meters in a vector unit.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.DopplerFactor">
      <summary>Ratio of Doppler effect to that in the real world.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.OrientFront">
      <summary>Describes the listener's front orientation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.OrientTop">
      <summary>Describes the listener's top orientation.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.Position">
      <summary>Describes the listener's position.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.RolloffFactor">
      <summary>Ratio of attenuation over distance to that in the real world.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Listener3DSettings.Velocity">
      <summary>Describes the listener's velocity.</summary>
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.Speakers">
      <summary>Various speaker configurations.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Speakers.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.Speakers.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.FivePointOne">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryMax">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryMin">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryNarrow">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.GeometryWide">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Headphone">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Mono">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Quad">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.SevenPointOne">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Stereo">
      <summary />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.Speakers.Surround">
      <summary />
    </member>
    <member name="T:Microsoft.DirectX.DirectSound.WaveFormat">
      <summary>Defines the format of waveform-audio data.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WaveFormat.#ctor">
      <summary>Initializes a new instance of the object.</summary>
    </member>
    <member name="M:Microsoft.DirectX.DirectSound.WaveFormat.ToString">
      <summary>Obtains the String representation of this instance.</summary>
      <returns />
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.AverageBytesPerSecond">
      <summary>Required average data-transfer rate, in bytes per second, for the format tag.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.BitsPerSample">
      <summary>Bits per sample for the format tag format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.BlockAlign">
      <summary>Block alignment, in bytes. The block alignment is the minimum atomic unit of data for the format tag format type.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.Channels">
      <summary>Number of channels in the waveform-audio data. Monaural data uses one channel and stereo data uses two channels.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.FormatTag">
      <summary>Waveform-audio format type. Format tags are registered with Microsoft Corporation for many compression algorithms.</summary>
    </member>
    <member name="P:Microsoft.DirectX.DirectSound.WaveFormat.SamplesPerSecond">
      <summary>Sample rate, in samples per second (hertz).</summary>
    </member>
  </members>
</doc>